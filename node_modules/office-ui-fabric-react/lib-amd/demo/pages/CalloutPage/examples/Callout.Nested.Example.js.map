{"version":3,"sources":["demo/pages/CalloutPage/examples/Callout.Nested.Example.tsx"],"names":[],"mappings":";;;;;;;IAaA;QAA0C,wCAA+C;QAGvF;YACE,iBAAO,CAAC;YAER,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE7C,IAAI,CAAC,KAAK,GAAG;gBACX,gBAAgB,EAAE,KAAK;aACxB,CAAC;QACJ,CAAC;QAEM,qCAAM,GAAb;YAAA,iBAmCC;YAlCO,kDAAgB,CAAgB;YAEtC,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB;gBAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,mCAAmC,EAAC,GAAG,EAAG,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,kBAAkB,GAAG,UAAU,EAApC,CAAsC;oBAC7G,oBAAC,cAAM,GAAC,OAAO,EAAG,IAAI,CAAC,UAAY,GAAI,gBAAgB,GAAG,cAAc,GAAG,cAAgB,CAAS;iBAChG;gBACJ,gBAAgB,GAAG,CACnB,qBAAC,GAAG;oBACF,oBAAC,eAAO,GACN,SAAS,EAAC,2BAA2B,EACrC,QAAQ,EAAG,CAAG,EACd,aAAa,EAAG,IAAI,CAAC,kBAAoB,EACzC,SAAS,EAAG,UAAC,EAAO,IAAO,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAG,EACnD,eAAe,EAAG,IAAM;wBAExB,qBAAC,GAAG,IAAC,SAAS,EAAC,0BAA0B;4BACvC,qBAAC,CAAC,IAAC,SAAS,EAAC,yBAAyB,GACpC,oBACF,CAAI;yBACA;wBACN,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB;4BACtC,qBAAC,GAAG,IAAC,SAAS,EAAC,2BAA2B;gCACxC,qBAAC,CAAC,IAAC,SAAS,EAAC,2BAA2B,GACtC,mHACF,CAAI;6BACA;yBACF;wBACN,oBAAC,kBAAU,GAAC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAO,EAAG,CACjC;iBACN,CACP,GAAG,CAAC,IAAI,CAAG,CACR,CACP,CAAC;QACJ,CAAC;QAEO,yCAAU,GAAlB,UAAmB,EAAO;YACxB,IAAI,CAAC,QAAQ,CAAC;gBACZ,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB;aAC/C,CAAC,CAAC;QACL,CAAC;QACH,2BAAC;IAAD,CAvDA,AAuDC,CAvDyC,KAAK,CAAC,SAAS,GAuDxD;IAvDY,4BAAoB,uBAuDhC,CAAA","file":"demo/pages/CalloutPage/examples/Callout.Nested.Example.js","sourcesContent":["import * as React from 'react';\nimport './CalloutExample.scss';\nimport {\n  Callout,\n  Button,\n  CommandBar\n} from '../../../../index';\nimport { items } from '../../CommandBarPage/examples/data';\n\nexport interface ICalloutBaiscExampleState {\n  isCalloutVisible?: boolean;\n}\n\nexport class CalloutNestedExample extends React.Component<any, ICalloutBaiscExampleState> {\n  private _menuButtonElement: HTMLElement;\n\n  public constructor() {\n    super();\n\n    this._onDismiss = this._onDismiss.bind(this);\n\n    this.state = {\n      isCalloutVisible: false,\n    };\n  }\n\n  public render() {\n    let { isCalloutVisible } = this.state;\n\n    return (\n      <div className='ms-CalloutExample'>\n        <div className='ms-CalloutBasicExample-buttonArea' ref={ (menuButton) => this._menuButtonElement = menuButton }>\n          <Button onClick={ this._onDismiss } >{ isCalloutVisible ? 'Hide callout' : 'Show callout' }</Button>\n        </div>\n        { isCalloutVisible ? (\n          <div>\n            <Callout\n              className='ms-CalloutExample-callout'\n              gapSpace={ 0 }\n              targetElement={ this._menuButtonElement }\n              onDismiss={ (ev: any) => { this._onDismiss(ev); } }\n              setInitialFocus={ true }\n              >\n              <div className='ms-CalloutExample-header'>\n                <p className='ms-CalloutExample-title'>\n                  Callout title here\n                </p>\n              </div>\n              <div className='ms-CalloutExample-inner'>\n                <div className='ms-CalloutExample-content'>\n                  <p className='ms-CalloutExample-subText'>\n                    Message body is optional. If help documentation is available, consider adding a link to learn more at the bottom.\n                  </p>\n                </div>\n              </div>\n              <CommandBar items={ this.props.items } />\n            </Callout>\n          </div>\n        ) : (null) }\n      </div>\n    );\n  }\n\n  private _onDismiss(ev: any) {\n    this.setState({\n      isCalloutVisible: !this.state.isCalloutVisible\n    });\n  }\n}\n"],"sourceRoot":"../../../../../src"}