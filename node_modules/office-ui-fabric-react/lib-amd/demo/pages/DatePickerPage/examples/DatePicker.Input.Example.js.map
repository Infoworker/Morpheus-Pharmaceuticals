{"version":3,"sources":["demo/pages/DatePickerPage/examples/DatePicker.Input.Example.tsx"],"names":[],"mappings":";;;;;;;IAMA,IAAM,gBAAgB,GAAG;QACvB,MAAM,EAAE;YACN,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,QAAQ;YACR,WAAW;YACX,SAAS;YACT,UAAU;YACV,UAAU;SACX;QAED,WAAW,EAAE;YACX,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACN;QAED,IAAI,EAAE;YACJ,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,WAAW;YACX,UAAU;YACV,QAAQ;YACR,UAAU;SACX;QAED,SAAS,EAAE;YACT,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ;QAED,SAAS,EAAE,aAAa;QAExB,sBAAsB,EAAE,yBAAyB;QAEjD,wBAAwB,EAAE,sBAAsB;KACjD,CAAC;IAMF;QAA4C,0CAAkD;QAC5F;YACE,iBAAO,CAAC;YAER,IAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,iBAAS,CAAC,MAAM;aACjC,CAAC;QACJ,CAAC;QAEM,uCAAM,GAAb;YACQ,8CAAc,CAAgB;YACpC,IAAM,IAAI,GAAG,uFAAuF,CAAC;YACrG,MAAM,CAAC,CACL,qBAAC,GAAG;gBACF,qBAAC,CAAC,SAAC,0LAAwL,CAAI;gBAC/L,oBAAC,kBAAU,GAAC,KAAK,EAAC,YAAY,EAAC,UAAU,EAAG,IAAM,EAAC,cAAc,EAAG,IAAM,EAAC,SAAS,EAAG,IAAM,EAAC,cAAc,EAAG,cAAgB,EAAC,OAAO,EAAG,gBAAkB,EAAC,KAAK,EAAG,IAAI,IAAI,EAAI,EAAG,CAChL,CACP,CAAC;QACJ,CAAC;QACH,6BAAC;IAAD,CAnBA,AAmBC,CAnB2C,KAAK,CAAC,SAAS,GAmB1D;IAnBY,8BAAsB,yBAmBlC,CAAA","file":"demo/pages/DatePickerPage/examples/DatePicker.Input.Example.js","sourcesContent":["import * as React from 'react';\nimport {\n  DatePicker,\n  DayOfWeek\n} from '../../../../index';\n\nconst DayPickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today',\n\n  isRequiredErrorMessage: 'Start date is required.',\n\n  invalidInputErrorMessage: 'Invalid date format.'\n};\n\nexport interface IDatePickerInputExampleState {\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class DatePickerInputExample extends React.Component<any, IDatePickerInputExampleState> {\n  public constructor() {\n    super();\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Sunday\n    };\n  }\n\n  public render() {\n    let { firstDayOfWeek } = this.state;\n    const desc = 'This field is required. One of the support input formats is year dash month dash day.';\n    return (\n      <div>\n        <p>Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker, click the TextField again will dismiss the DatePicker and allow text input.</p>\n        <DatePicker label='Start date' isRequired={ true } allowTextInput={ true } ariaLabel={ desc } firstDayOfWeek={ firstDayOfWeek } strings={ DayPickerStrings } value={ new Date() } />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../../src"}