{"version":3,"sources":["demo/pages/DialogPage/examples/Dialog.LargeHeader.Example.tsx"],"names":[],"mappings":";;;;;;;IAUA;QAA8C,4CAAyB;QAErE;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,KAAK;aAClB,CAAC;QACJ,CAAC;QAEM,yCAAM,GAAb;YACE,MAAM,CAAC,CACL,qBAAC,GAAG;gBACF,oBAAC,cAAM,GAAC,WAAW,EAAC,yBAAyB,EAAC,OAAO,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAG,GAAC,aAAW,CAAS;gBAC1G,oBAAC,cAAM,GACL,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,UAAY,EAChC,IAAI,EAAG,kBAAU,CAAC,WAAa,EAC/B,SAAS,EAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAG,EAC1C,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAC,4GAA4G,EACpH,UAAU,EAAG,KAAO;oBAEpB,oBAAC,mBAAW,GACV,OAAO,EAAG;wBACR;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;yBACjB;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,OAAO,EAAE,IAAI;yBACd;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,QAAQ,EAAE,IAAI;yBACf;qBACA,EACH,SAAS,EAAG,IAAI,CAAC,gBAAkB,EACnC;oBACF,oBAAC,oBAAY;wBACX,oBAAC,cAAM,GAAC,UAAU,EAAG,kBAAU,CAAC,OAAS,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE,GAAC,MAAI,CAAS;wBAC9F,oBAAC,cAAM,GAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE,GAAC,QAAM,CAAS,CACjD,CACR,CACL,CACP,CAAC;QACJ,CAAC;QAEO,8CAAW,GAAnB;YACE,IAAI,CAAC,QAAQ,CAAE,EAAC,UAAU,EAAE,IAAI,EAAE,CAAE,CAAC;QACvC,CAAC;QAEO,+CAAY,GAApB;YACE,IAAI,CAAC,QAAQ,CAAE,EAAC,UAAU,EAAE,KAAK,EAAE,CAAE,CAAC;QACxC,CAAC;QAEO,mDAAgB,GAAxB;YACE,OAAO,CAAC,GAAG,CAAE,sBAAsB,CAAE,CAAC;QACxC,CAAC;QACH,+BAAC;IAAD,CA5DA,AA4DC,CA5D6C,KAAK,CAAC,SAAS,GA4D5D;IA5DY,gCAAwB,2BA4DpC,CAAA","file":"demo/pages/DialogPage/examples/Dialog.LargeHeader.Example.js","sourcesContent":["import * as React from 'react';\nimport {\n  Dialog,\n  DialogType,\n  DialogFooter,\n  Button,\n  ButtonType,\n  ChoiceGroup\n} from '../../../../index';\n\nexport class DialogLargeHeaderExample extends React.Component<any, any> {\n\n  constructor() {\n    super();\n    this.state = {\n      showDialog: false\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        <Button description='Opens the Sample Dialog' onClick={ this._showDialog.bind(this) }>Open Dialog</Button>\n        <Dialog\n          isOpen={ this.state.showDialog }\n          type={ DialogType.largeHeader }\n          onDismiss={ this._closeDialog.bind(this) }\n          title='All emails together'\n          subText='Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\n          isBlocking={ false }\n        >\n          <ChoiceGroup\n            options={ [\n              {\n                key: 'A',\n                text: 'Option A'\n              },\n              {\n                key: 'B',\n                text: 'Option B',\n                checked: true\n              },\n              {\n                key: 'C',\n                text: 'Option C',\n                disabled: true\n              }\n            ] }\n            onChanged={ this._onChoiceChanged }\n          />\n          <DialogFooter>\n            <Button buttonType={ ButtonType.primary } onClick={this._closeDialog.bind(this)}>Save</Button>\n            <Button onClick={this._closeDialog.bind(this)}>Cancel</Button>\n          </DialogFooter>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private _showDialog() {\n    this.setState( {showDialog: true } );\n  }\n\n  private _closeDialog() {\n    this.setState( {showDialog: false } );\n  }\n\n  private _onChoiceChanged() {\n    console.log( 'Choice option change' );\n  }\n}\n"],"sourceRoot":"../../../../../src"}