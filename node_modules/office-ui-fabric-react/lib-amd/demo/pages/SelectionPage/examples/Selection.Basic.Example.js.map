{"version":3,"sources":["demo/pages/SelectionPage/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":";;;;;;;IAcA,IAAM,UAAU,GAAG,GAAG,CAAC;IAgBvB;;OAEG;IACH;QAA2C,yCAAiD;QAG1F;YACE,iBAAO,CAAC;YAER,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAErD,IAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,sBAAe,CAAC,UAAU,CAAC;gBAClC,SAAS,EAAE,IAAI,iBAAS,CAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC1E,aAAa,EAAE,qBAAa,CAAC,QAAQ;gBACrC,SAAS,EAAE,KAAK;aACjB,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAyB,EAAE,KAAK,CAAC,CAAC;QAC7E,CAAC;QAEM,iDAAiB,GAAxB;YACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;QAEM,sCAAM,GAAb;YACE,IAAA,eAAoD,EAA9C,gBAAK,EAAE,wBAAS,EAAE,gCAAa,CAAgB;YAErD,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,0BAA0B;gBACvC,oBAAC,kBAAU,GAAC,KAAK,EAAG,IAAI,CAAC,gBAAgB,EAAI,EAAG;gBAChD,oBAAC,wBAAgB,GAAC,SAAS,EAAG,SAAW,EAAC,SAAS,EAAG,aAAa,KAAK,qBAAa,CAAC,QAAU;oBAC9F,oBAAC,qBAAa,GACZ,SAAS,EAAG,SAAW,EACvB,aAAa,EAAG,aAAe,EAC/B,aAAa,EAAG,UAAC,IAAI,IAAK,OAAA,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAnC,CAAqC,GAC7D,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC3B,oBAAC,oBAAoB,GACnB,GAAG,EAAG,eAAe,GAAG,KAAO,EAC/B,GAAG,EAAG,IAAI,CAAC,GAAK,EAChB,IAAI,EAAG,IAAM,EACb,SAAS,EAAG,KAAO,EACnB,aAAa,EAAG,aAAe,EAC/B,SAAS,EAAG,SAAW,EACrB,CACL,EAT4B,CAS5B,CAAG,CACU;iBACC,CACf,CACP,CAAC;QACJ,CAAC;QAEO,mDAAmB,GAA3B;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;QACH,CAAC;QAEO,kDAAkB,GAA1B;YACQ,oCAAS,CAAgB;YAC/B,SAAS,CAAC,iBAAiB,EAAE,CAAC;QAChC,CAAC;QAEO,uDAAuB,GAA/B,UAAgC,EAAiC,EAAE,QAA6B;YAC9F,IAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,QAAQ,CAAC,IAAI;aAC7B,CAAC,CAAC;QACL,CAAC;QAEO,mDAAmB,GAA3B,UAA4B,EAAiC,EAAE,QAA6B;YAC1F,IAAI,aAAa,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;YACnF,IAAI,YAAY,GAAG,IAAI,iBAAS,CAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;YACjH,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAyB,EAAE,KAAK,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,YAAY;gBACvB,SAAS,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG,QAAQ,GAAG,KAAK;aAC3D,CAAC,CAAC;QACL,CAAC;QAEO,8CAAc,GAAtB,UAAuB,IAAS;YAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QACrL,CAAC;QAEO,gDAAgB,GAAxB;YACE,IAAA,eAA6C,EAAvC,gCAAa,EAAE,wBAAS,CAAgB;YAE9C,MAAM,CAAC;gBACL;oBACE,GAAG,EAAE,eAAe;oBACpB,IAAI,EAAE,gBAAgB;oBACtB,KAAK,EAAE;wBACL;4BACE,GAAG,EAAE,qBAAa,CAAC,qBAAa,CAAC,IAAI,CAAC;4BACtC,IAAI,EAAE,MAAM;4BACZ,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,aAAa,KAAK,qBAAa,CAAC,IAAI;4BAC7C,OAAO,EAAE,IAAI,CAAC,uBAAuB;4BACrC,IAAI,EAAE,qBAAa,CAAC,IAAI;yBAEzB;wBACD;4BACE,GAAG,EAAE,qBAAa,CAAC,qBAAa,CAAC,MAAM,CAAC;4BACxC,IAAI,EAAE,eAAe;4BACrB,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,aAAa,KAAK,qBAAa,CAAC,MAAM;4BAC/C,OAAO,EAAE,IAAI,CAAC,uBAAuB;4BACrC,IAAI,EAAE,qBAAa,CAAC,MAAM;yBAC3B;wBACD;4BACE,GAAG,EAAE,qBAAa,CAAC,qBAAa,CAAC,QAAQ,CAAC;4BAC1C,IAAI,EAAE,cAAc;4BACpB,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,aAAa,KAAK,qBAAa,CAAC,QAAQ;4BACjD,OAAO,EAAE,IAAI,CAAC,uBAAuB;4BACrC,IAAI,EAAE,qBAAa,CAAC,QAAQ;yBAC7B;qBACF;iBACF;gBACD;oBACE,GAAG,EAAE,WAAW;oBAChB,IAAI,EAAE,YAAY;oBAClB,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,IAAI,CAAC,kBAAkB;iBACjC;gBACD;oBACE,GAAG,EAAE,gBAAgB;oBACrB,IAAI,EAAE,yBAAyB;oBAC/B,KAAK,EAAE;wBACL;4BACE,GAAG,EAAE,KAAK;4BACV,IAAI,EAAE,WAAW;4BACjB,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,SAAS,KAAK,KAAK;4BAC5B,OAAO,EAAE,IAAI,CAAC,mBAAmB;4BACjC,IAAI,EAAE,KAAK;yBACZ;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,4BAA4B;4BAClC,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,SAAS,KAAK,QAAQ;4BAC/B,OAAO,EAAE,IAAI,CAAC,mBAAmB;4BACjC,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,CAAC;QACJ,CAAC;QACH,4BAAC;IAAD,CArJA,AAqJC,CArJ0C,KAAK,CAAC,SAAS,GAqJzD;IArJY,6BAAqB,wBAqJjC,CAAA;IAED;;OAEG;IACH;QAA0C,wCAA+C;QAAzF;YAA0C,8BAA+C;QAkBzF,CAAC;QAjBQ,qCAAM,GAAb;YACE,IAAA,eAA8D,EAAxD,cAAI,EAAE,wBAAS,EAAE,wBAAS,EAAE,gCAAa,CAAgB;YAC/D,IAAI,UAAU,GAAG,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YAEtD,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB,GAAE,oBAAoB,GAAG,SAAW;gBACxE,CAAC,aAAa,KAAK,qBAAa,CAAC,IAAI,CAAC,IAAI,CAC1C,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAAC,qBAAqB,GAAG,IAAM;oBAC3E,oBAAC,aAAK,GAAC,OAAO,EAAG,UAAY,EAAG;iBAC5B,CACL;gBACH,qBAAC,IAAI,IAAC,SAAS,EAAC,8BAA8B,GAC1C,IAAI,CAAC,IAAM,CACR,CACH,CACP,CAAC;QACJ,CAAC;QACH,2BAAC;IAAD,CAlBA,AAkBC,CAlByC,KAAK,CAAC,SAAS,GAkBxD;IAlBY,4BAAoB,uBAkBhC,CAAA","file":"demo/pages/SelectionPage/examples/Selection.Basic.Example.js","sourcesContent":["import * as React from 'react';\nimport { CommandBar, IContextualMenuItem, MarqueeSelection } from '../../../../index';\nimport { Check } from '../../../../components/Check/Check';\nimport {\n  IObjectWithKey,\n  ISelection,\n  Selection,\n  SelectionMode,\n  SelectionZone\n} from '../../../../utilities/selection/index';\nimport { createListItems } from '../../../utilities/data';\n\nimport './Selection.Example.scss';\n\nconst ITEM_COUNT = 100;\n\nexport interface ISelectionBasicExampleState {\n  items?: any[];\n  selection?: ISelection;\n  selectionMode?: SelectionMode;\n  canSelect?: string;\n}\n\nexport interface ISelectionItemExampleProps {\n  item?: any;\n  itemIndex?: number;\n  selection?: ISelection;\n  selectionMode?: SelectionMode;\n}\n\n/**\n * The SelectionBasicExample controls the selection state of all items\n */\nexport class SelectionBasicExample extends React.Component<any, ISelectionBasicExampleState> {\n  private _hasMounted: boolean;\n\n  constructor() {\n    super();\n\n    this._hasMounted = false;\n    this._onSelectionChanged = this._onSelectionChanged.bind(this);\n    this._onSelectionModeChanged = this._onSelectionModeChanged.bind(this);\n    this._onToggleSelectAll = this._onToggleSelectAll.bind(this);\n    this._onCanSelectChanged = this._onCanSelectChanged.bind(this);\n    this._canSelectItem = this._canSelectItem.bind(this);\n\n    this.state = {\n      items: createListItems(ITEM_COUNT),\n      selection: new Selection({ onSelectionChanged: this._onSelectionChanged }),\n      selectionMode: SelectionMode.multiple,\n      canSelect: 'all'\n    };\n    this.state.selection.setItems(this.state.items as IObjectWithKey[], false);\n  }\n\n  public componentDidMount() {\n    this._hasMounted = true;\n  }\n\n  public render() {\n    let { items, selection, selectionMode } = this.state;\n\n    return (\n      <div className='ms-SelectionBasicExample'>\n        <CommandBar items={ this._getCommandItems() } />\n        <MarqueeSelection selection={ selection } isEnabled={ selectionMode === SelectionMode.multiple } >\n          <SelectionZone\n            selection={ selection }\n            selectionMode={ selectionMode }\n            onItemInvoked={ (item) => alert('item invoked: ' + item.name) }>\n            { items.map((item, index) => (\n              <SelectionItemExample\n                ref={ 'detailsGroup_' + index }\n                key={ item.key }\n                item={ item }\n                itemIndex={ index }\n                selectionMode={ selectionMode }\n                selection={ selection }\n                />\n            )) }\n          </SelectionZone>\n        </MarqueeSelection>\n      </div>\n    );\n  }\n\n  private _onSelectionChanged() {\n    if (this._hasMounted) {\n      this.forceUpdate();\n    }\n  }\n\n  private _onToggleSelectAll() {\n    let { selection } = this.state;\n    selection.toggleAllSelected();\n  }\n\n  private _onSelectionModeChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\n    this.setState({\n      selectionMode: menuItem.data\n    });\n  }\n\n  private _onCanSelectChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\n    let canSelectItem = (menuItem.data === 'vowels') ? this._canSelectItem : undefined;\n    let newSelection = new Selection({ onSelectionChanged: this._onSelectionChanged, canSelectItem: canSelectItem });\n    newSelection.setItems(this.state.items as IObjectWithKey[], false);\n    this.setState({\n      selection: newSelection,\n      canSelect: (menuItem.data === 'vowels') ? 'vowels' : 'all'\n    });\n  }\n\n  private _canSelectItem(item: any): boolean {\n    return item.name && (item.name.indexOf('a') === 0 || item.name.indexOf('e') === 0 || item.name.indexOf('i') === 0 || item.name.indexOf('o') === 0 || item.name.indexOf('u') === 0);\n  }\n\n  private _getCommandItems(): IContextualMenuItem[] {\n    let { selectionMode, canSelect } = this.state;\n\n    return [\n      {\n        key: 'selectionMode',\n        name: 'Selection Mode',\n        items: [\n          {\n            key: SelectionMode[SelectionMode.none],\n            name: 'None',\n            canCheck: true,\n            checked: selectionMode === SelectionMode.none,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.none\n\n          },\n          {\n            key: SelectionMode[SelectionMode.single],\n            name: 'Single select',\n            canCheck: true,\n            checked: selectionMode === SelectionMode.single,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.single\n          },\n          {\n            key: SelectionMode[SelectionMode.multiple],\n            name: 'Multi select',\n            canCheck: true,\n            checked: selectionMode === SelectionMode.multiple,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.multiple\n          },\n        ]\n      },\n      {\n        key: 'selectAll',\n        name: 'Select All',\n        icon: 'check',\n        onClick: this._onToggleSelectAll\n      },\n      {\n        key: 'allowCanSelect',\n        name: 'Choose selectable items',\n        items: [\n          {\n            key: 'all',\n            name: 'All items',\n            canCheck: true,\n            checked: canSelect === 'all',\n            onClick: this._onCanSelectChanged,\n            data: 'all'\n          },\n          {\n            key: 'a',\n            name: 'Names starting with vowels',\n            canCheck: true,\n            checked: canSelect === 'vowels',\n            onClick: this._onCanSelectChanged,\n            data: 'vowels'\n          }\n        ]\n      }\n    ];\n  }\n}\n\n/**\n * The SelectionItemExample controls and displays the selection state of a single item\n */\nexport class SelectionItemExample extends React.Component<ISelectionItemExampleProps, {}> {\n  public render() {\n    let { item, itemIndex, selection, selectionMode } = this.props;\n    let isSelected = selection.isIndexSelected(itemIndex);\n\n    return (\n      <div className='ms-SelectionItemExample'  data-selection-index={ itemIndex }>\n        { (selectionMode !== SelectionMode.none) && (\n          <div className='ms-SelectionItemExample-check' data-selection-toggle={ true } >\n            <Check checked={ isSelected } />\n          </div>\n        ) }\n        <span className='ms-SelectionItemExample-name'>\n          { item.name }\n        </span>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../../src"}