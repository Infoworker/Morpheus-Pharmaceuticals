{"version":3,"sources":["demo/pages/MessageBarPage/MessageBarPage.tsx"],"names":[],"mappings":";;;;;;;IAYA,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;IAEtF;QAAoC,kCAA6C;QAG/E;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,YAAY,CAAC,CAAC;QAChF,CAAC;QAEM,+BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EACV,oBAAC,mBAAW,GACV,KAAK,EAAC,0BAA0B,EAChC,IAAI,EAAG,0BAA4B;gBACnC,oBAAC,iDAAsB,OAAG;aAE7B,EACD,gBAAgB,EACd,qBAAC,GAAG;gBACF,oBAAC,0BAAkB,GAAC,aAAa,EAAC,YAAY,EAAG;gBAAA,GACjD;gBAAA,qBAAC,CAAC;oBAAC,oCAAkC;oBAAA,qBAAC,IAAI,SAAC,YAAU,CAAO;oBAAC,mDAAgD;oBAAA,qBAAC,IAAI,SAAC,YAAU,CAAO;oBAAC,OAAI;oBAAA,qBAAC,IAAI,SAAC,GAAC,CAAO;oBAAC,qBAAkB,CAAI,CAEjL,EACD,QAAQ,EACN,qBAAC,GAAG;gBACF,qBAAC,CAAC,SACA,oQACF,CAAI;aAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG;gBACF,qBAAC,EAAE;oBACD,qBAAC,EAAE,SAAC,wGAAsG,CAAK;oBAC/G,qBAAC,EAAE,SAAC,kGAAgG,CAAK;oBACzG,qBAAC,EAAE,SAAC,0IAAwI,CAAK;oBACjJ,qBAAC,EAAE,SAAC,yFAAuF,CAAK,CAC7F;aAER,EACD,KAAK,EACH,qBAAC,GAAG;gBACF,qBAAC,EAAE;oBACD,qBAAC,EAAE,SAAC,iNAA+M,CAAK;oBACxN,qBAAC,EAAE,SAAC,gPACJ,CAAK,CACF;aAER,EACD,OAAO,EACL,qBAAC,CAAC,IAAC,IAAI,EAAC,8FAA8F,GAAC,WAAS,CACjH,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;QACJ,CAAC;QAEH,qBAAC;IAAD,CAhEA,AAgEC,CAhEmC,KAAK,CAAC,SAAS,GAgElD;IAhEY,sBAAc,iBAgE1B,CAAA","file":"demo/pages/MessageBarPage/MessageBarPage.js","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  PropertiesTableSet,\n  ComponentPage\n} from '../../components/index';\n\nimport { MessageBarBasicExample } from './examples/MessageBar.Basic.Example';\nimport { getPageRouteFromState } from '../../utilities/pageroute';\nimport { AppState } from '../../components/App/AppState';\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\n\nconst MessageBarBasicExampleCode = require('./examples/MessageBar.Basic.Example.tsx');\n\nexport class MessageBarPage extends React.Component<IComponentDemoPageProps, any> {\n  private _url: string;\n\n  constructor() {\n    super();\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'MessageBar');\n  }\n\n  public render() {\n    return (\n      <ComponentPage\n        title='MessageBar'\n        componentName='MessageBarExample'\n        exampleCards={\n          <ExampleCard\n            title='Various MessageBar types'\n            code={ MessageBarBasicExampleCode }>\n            <MessageBarBasicExample />\n          </ExampleCard>\n        }\n        propertiesTables={\n          <div>\n            <PropertiesTableSet componentName='MessageBar' />,\n            <p>Besides the above properties, the <code>MessageBar</code> component accepts all properties that the React <code>MessageBar</code> and <code>a</code> components accept.</p>\n          </div>\n        }\n        overview={\n          <div>\n            <p>\n              A MessageBar is an area at the top of a primary view that displays relevant status information. You can use a MessageBar to tell the user about a situation that does not require their immediate attention and therefore does not need to block other activities.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Place the message bar near the top of the relevant view, in a highly visible but unobtrusive location.</li>\n              <li>Keep the text very brief. Be succinct and your users are more likely to read everything you say.</li>\n              <li>Consider how localization may affect the message. Translation to other languages may add up to 33% more characters to the string length.</li>\n              <li>Use the right variant for the type and urgency of the particular message (see variants)</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Don’t use paragraphs, long sentences, or special formatting in a MessageBar. The control tries to grow to accommodate all the text and will just result in pushing the user’s main content too low on the view.</li>\n              <li>Don’t use buttons when a subtler link will suffice. Reserve the usage of button for when the MessageBar has a single ”hero” action that has vital usefulness to the user at that particular moment. Using more than one button is discouraged.\n              </li>\n            </ul>\n          </div>\n        }\n        related={\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/MessageBar.md'>Fabric JS</a>\n        }\n        route={ this._url }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n\n}\n"],"sourceRoot":"../../../../src"}