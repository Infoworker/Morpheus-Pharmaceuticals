{"version":3,"sources":["demo/pages/LayerPage/examples/Layer.Basic.Example.tsx"],"names":[],"mappings":";;;;;;;IAQA;QAAuC,qCAAuB;QAE5D;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,KAAK,GAAG;gBACX,SAAS,EAAE,KAAK;gBAChB,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE;aACtC,CAAC;QACJ,CAAC;QAEM,6CAAiB,GAAxB;YAAA,iBAEC;YADC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAxD,CAAwD,EAAE,IAAI,CAAC,CAAC;QAChG,CAAC;QAEM,kCAAM,GAAb;YAAA,iBAqBC;YApBC,IAAA,eAAoC,EAA9B,wBAAS,EAAE,cAAI,CAAgB;YACrC,IAAI,OAAO,GAAG,CACZ,qBAAC,GAAG,IAAC,SAAS,EAAC,wCAAwC;gBACrD,qBAAC,GAAG,IAAC,SAAS,EAAC,0BAA0B,GAAC,gCAA8B,CAAM;gBAC9E,qBAAC,GAAG,SAAG,IAAM,CAAM,CACf,CACP,CAAC;YAEF,MAAM,CAAC,CACL,qBAAC,GAAG;gBAEF,oBAAC,gBAAQ,GACP,KAAK,EAAC,yCAAyC,EAC/C,OAAO,EAAG,SAAW,EACrB,QAAQ,EAAG,UAAC,EAAE,EAAE,OAAO,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAArC,CAAuC,EAAG;gBAEtE,SAAS,GAAG,oBAAC,aAAK,QAAG,OAAS,CAAQ,GAAG,OAAS,CAEhD,CACP,CAAC;QACJ,CAAC;QACH,wBAAC;IAAD,CApCA,AAoCC,CApCsC,qBAAa,GAoCnD;IApCY,yBAAiB,oBAoC7B,CAAA","file":"demo/pages/LayerPage/examples/Layer.Basic.Example.js","sourcesContent":["import * as React from 'react'; // tslint:disable-line:no-unused-variable\nimport './Layer.Example.scss';\nimport {\n  BaseComponent,\n  Checkbox,\n  Layer\n} from '../../../../index';\n\nexport class LayerBasicExample extends BaseComponent<any, any> {\n\n  constructor() {\n    super();\n    this.state = {\n      showLayer: false,\n      time: new Date().toLocaleTimeString()\n    };\n  }\n\n  public componentDidMount() {\n    this._async.setInterval(() => this.setState({ time: new Date().toLocaleTimeString() }), 1000);\n  }\n\n  public render() {\n    let { showLayer, time } = this.state;\n    let content = (\n      <div className='LayerExample-content ms-u-scaleUpIn100'>\n        <div className='LayerExample-textContent'>This is example layer content.</div>\n        <div>{ time }</div>\n      </div>\n    );\n\n    return (\n      <div>\n\n        <Checkbox\n          label='Wrap the content box belowed in a Layer'\n          checked={ showLayer }\n          onChange={ (ev, checked) => this.setState({ showLayer: checked }) } />\n\n        { showLayer ? <Layer>{ content }</Layer> : content }\n\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../../src"}