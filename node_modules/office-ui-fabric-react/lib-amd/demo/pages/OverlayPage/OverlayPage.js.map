{"version":3,"sources":["demo/pages/OverlayPage/OverlayPage.tsx"],"names":[],"mappings":";;;;;;;IAaA,IAAM,uBAAuB,GAAG,OAAO,CAAC,sCAAsC,CAAC,CAAC;IAChF,IAAM,sBAAsB,GAAG,OAAO,CAAC,qCAAqC,CAAC,CAAC;IAE9E;QAAiC,+BAA6C;QAG5E;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAC7E,CAAC;QAEM,4BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,SAAS,EACf,aAAa,EAAC,gBAAgB,EAC9B,YAAY,EACV,qBAAC,GAAG;gBACF,oBAAC,mBAAW,GAAC,KAAK,EAAC,OAAO,EAAC,IAAI,EAAG,uBAAyB;oBACzD,oBAAC,2CAAmB,OAAG;iBACX;gBACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,MAAM,EAAC,IAAI,EAAG,sBAAwB;oBACvD,oBAAC,yCAAkB,OAAG;iBACV,CAEjB,EACD,gBAAgB,EACd,oBAAC,0BAAkB,GAAC,aAAa,EAAC,SAAS,EAC5C,EACD,QAAQ,EACN,qBAAC,GAAG;gBACF,qBAAC,CAAC,SACA,gSACF,CAAI;aAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG;gBACF,qBAAC,EAAE;oBACD,qBAAC,EAAE,SAAC,iDAA+C,CAAK;oBACxD,qBAAC,EAAE,SAAC,6CAA2C,CAAK,CACjD;aAER,EACD,KAAK,EACH,qBAAC,GAAG;gBACF,qBAAC,EAAE;oBACD,qBAAC,EAAE,SAAC,sFAAoF,CAAK;iBAC1F;aAER,EACD,OAAO,EACL,qBAAC,CAAC,IAAC,IAAI,EAAC,2FAA2F,GAAC,WAAS,CAC9G,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;QACJ,CAAC;QAEH,kBAAC;IAAD,CA5DA,AA4DC,CA5DgC,KAAK,CAAC,SAAS,GA4D/C;IA5DY,mBAAW,cA4DvB,CAAA","file":"demo/pages/OverlayPage/OverlayPage.js","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  PropertiesTableSet,\n  ComponentPage\n} from '../../components/index';\n\nimport { AppState } from '../../components/App/AppState';\nimport { getPageRouteFromState } from '../../utilities/pageroute';\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\nimport { OverlayDarkExample } from './examples/Overlay.Dark.Example';\nimport { OverlayLightExample } from './examples/Overlay.Light.Example';\n\nconst OverlayLightExampleCode = require('./examples/Overlay.Light.Example.tsx');\nconst OverlayDarkExampleCode = require('./examples/Overlay.Dark.Example.tsx');\n\nexport class OverlayPage extends React.Component<IComponentDemoPageProps, any> {\n  private _url: string;\n\n  constructor() {\n    super();\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Overlay');\n  }\n\n  public render() {\n    return (\n      <ComponentPage\n        title='Overlay'\n        componentName='OverlayExample'\n        exampleCards={\n          <div>\n            <ExampleCard title='Light' code={ OverlayLightExampleCode }>\n              <OverlayLightExample />\n            </ExampleCard>\n            <ExampleCard title='Dark' code={ OverlayDarkExampleCode }>\n              <OverlayDarkExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet componentName='Overlay' />\n        }\n        overview={\n          <div>\n            <p>\n              Overlays are used to render a semi-transparent layer on top of existing UI. Overlays help focus the user on the content that sits above the added layer and are often used to help designate a modal or blocking experience. Overlays can be seen used in conjunction with Panels and Dialogs.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use a dark Overlay with a first-run experience.</li>\n              <li>Use a white Overlay for dialogs and panels.</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Use an Overlay when you want the user to interact with the UI that is being covered.</li>\n            </ul>\n          </div>\n        }\n        related={\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/Overlay.md'>Fabric JS</a>\n        }\n        route={ this._url }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n\n}\n"],"sourceRoot":"../../../../src"}