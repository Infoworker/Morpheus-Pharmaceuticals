{"version":3,"sources":["demo/pages/DetailsListPage/examples/DetailsList.CustomColumns.Example.tsx"],"names":[],"mappings":"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","file":"demo/pages/DetailsListPage/examples/DetailsList.CustomColumns.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport {\n  DetailsList,\n  Link,\n  Image,\n  ImageFit,\n  buildColumns,\n  IColumn\n} from '../../../../index';\nimport { createListItems } from '../../../utilities/data';\n\nlet _items: any[];\n\nexport interface IDetailsListCustomColumnsExampleState {\n  sortedItems?: any[];\n  columns?: IColumn[];\n}\n\nexport class DetailsListCustomColumnsExample extends React.Component<{}, IDetailsListCustomColumnsExampleState> {\n\n  constructor(props: {}) {\n    super(props);\n\n    _items = _items || createListItems(500);\n\n    this.state = {\n      sortedItems: _items,\n      columns: _buildColumns()\n    };\n  }\n\n  public render() {\n    let { sortedItems, columns } = this.state;\n\n    return (\n      <DetailsList\n        items={ sortedItems }\n        setKey='set'\n        columns={ columns }\n        onRenderItemColumn={ _renderItemColumn }\n        onColumnHeaderClick={ this._onColumnClick.bind(this) }\n        onItemInvoked={ (item, index) => alert(`Item ${ item.name } at index ${ index } has been invoked.`) }\n        onColumnHeaderContextMenu={ (column, ev) => console.log(`column ${ column.key } contextmenu opened.`) } />\n    );\n  }\n\n  private _onColumnClick(column) {\n    let { sortedItems, columns } = this.state;\n    let isSortedDescending = column.isSortedDescending;\n\n    // If we've sorted this column, flip it.\n    if (column.isSorted) {\n      isSortedDescending = !isSortedDescending;\n    }\n\n    // Sort the items.\n    sortedItems = sortedItems.concat([]).sort((a, b) => {\n      let firstValue = a[column.fieldName];\n      let secondValue = b[column.fieldName];\n\n      if (isSortedDescending) {\n        return firstValue > secondValue ? -1 : 1;\n      } else {\n        return firstValue > secondValue ? 1 : -1;\n      }\n    });\n\n    // Reset the items and columns to match the state.\n    this.setState({\n      sortedItems: sortedItems,\n      columns: columns.map(col => {\n        col.isSorted = (col.key === column.key);\n\n        if (col.isSorted) {\n          col.isSortedDescending = isSortedDescending;\n        }\n\n        return col;\n      })\n    });\n  }\n}\n\nfunction _buildColumns() {\n  let columns = buildColumns(_items);\n\n  let thumbnailColumn = columns.filter(column => column.name === 'thumbnail')[0];\n\n  // Special case one column's definition.\n  thumbnailColumn.name = '';\n  thumbnailColumn.maxWidth = 50;\n\n  return columns;\n}\n\nfunction _renderItemColumn(item, index, column) {\n  let fieldContent = item[column.fieldName];\n\n  switch (column.key) {\n    case 'thumbnail':\n      return <Image src={ fieldContent } width={ 50 } height={ 50 } imageFit={ ImageFit.cover } />;\n\n    case 'name':\n      return <Link href='#'>{ fieldContent }</Link>;\n\n    case 'color':\n      return <span style={ { color: fieldContent } }>{ fieldContent }</span>;\n\n    default:\n      return <span>{ fieldContent }</span>;\n  }\n}\n"],"sourceRoot":"../../../../../src"}