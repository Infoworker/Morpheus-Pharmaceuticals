{"version":3,"sources":["demo/components/Header/Header.tsx"],"names":[],"mappings":"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","file":"demo/components/Header/Header.js","sourcesContent":["import * as React from 'react';\nimport { } from '../../../utilities/decorators/withResponsiveMode';\nimport {\n  ContextualMenu,\n  IContextualMenuItem\n  } from '../../../ContextualMenu';\nimport { getRTL, setRTL } from '../../../utilities/rtl';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection } from '../../../FocusZone';\nimport { withResponsiveMode, ResponsiveMode } from '../../../utilities/decorators/withResponsiveMode';\nimport './Header.scss';\n\nexport interface IHeaderProps {\n  title: string;\n  sideLinks: { name: string, url: string }[];\n\n  isMenuVisible: boolean;\n  onIsMenuVisibleChanged?: (isMenuVisible: boolean) => void;\n\n  responsiveMode?: ResponsiveMode;\n}\n\nexport interface IHeaderState {\n  contextMenu?: {\n    target: HTMLElement,\n    items: IContextualMenuItem[]\n  };\n  isRTLEnabled?: boolean;\n}\n\n@withResponsiveMode\nexport class Header extends React.Component<IHeaderProps, IHeaderState> {\n  constructor(props: IHeaderProps) {\n    super(props);\n\n    this._onGearClick = this._onGearClick.bind(this);\n    this._onDismiss = this._onDismiss.bind(this);\n    this._onRTLToggled = this._onRTLToggled.bind(this);\n    this._onMenuClick = this._onMenuClick.bind(this);\n\n    this.state = {\n      contextMenu: null,\n      isRTLEnabled: getRTL()\n    };\n  }\n\n  public render() {\n    let { title, sideLinks, responsiveMode } = this.props;\n    let { contextMenu } = this.state;\n\n    // In medium and below scenarios, hide the side links.\n    if (responsiveMode <= ResponsiveMode.large) {\n      sideLinks = [ ];\n    }\n\n    return (\n      <div>\n        <div className='Header'>\n          { (responsiveMode <= ResponsiveMode.large) && (\n            <button className='Header-button' onClick={ this._onMenuClick }>\n              <i className='ms-Icon ms-Icon--GlobalNavButton'/>\n            </button>\n          ) }\n          <div className='Header-title ms-font-xl ms-fontColor-white'>\n            <i className='ms-Icon ms-Icon--Org' />\n            { title }\n          </div>\n          <div className='Header-buttons'>\n            <FocusZone direction={ FocusZoneDirection.horizontal }>\n              { sideLinks.map((link, linkIndex) => (\n                <a key={ linkIndex } className='Header-button ms-fontColor-white' href={ link.url }>{ link.name }</a>\n              )).concat([\n                <button key='headerButton' className='Header-button' onClick={ this._onGearClick }>\n                  <i className='ms-Icon ms-Icon--Settings'/>\n                </button>\n              ]) }\n            </FocusZone>\n          </div>\n        </div>\n        { contextMenu ? (\n        <ContextualMenu\n          items={ contextMenu.items }\n          isBeakVisible={ true }\n          targetElement={ contextMenu.target }\n          directionalHint={ DirectionalHint.bottomAutoEdge }\n          gapSpace={ 5 }\n          onDismiss={ this._onDismiss } />\n        ) : (null) }\n      </div>\n    );\n  }\n\n  private _onMenuClick(ev: React.MouseEvent<HTMLElement>) {\n    let { onIsMenuVisibleChanged, isMenuVisible } = this.props;\n\n    if (onIsMenuVisibleChanged) {\n      onIsMenuVisibleChanged(!isMenuVisible);\n    }\n  }\n\n  private _onGearClick(ev: React.MouseEvent<HTMLElement>) {\n    let { contextMenu } = this.state;\n\n    this.setState({\n      contextMenu: contextMenu ? null : {\n        target: ev.currentTarget as HTMLElement,\n        items: this._getOptionMenuItems()\n      }\n    });\n  }\n\n  private _getOptionMenuItems(): IContextualMenuItem[] {\n    return [{\n      key: 'isRTL',\n      name: `Render in ${ this.state.isRTLEnabled ? 'LTR' : 'RTL' }`,\n      icon: 'Settings',\n      onClick: this._onRTLToggled\n    }];\n  }\n\n  private _onRTLToggled(ev: React.MouseEvent<HTMLElement>) {\n    let { isRTLEnabled } = this.state;\n\n    setRTL(!isRTLEnabled);\n\n    this.setState({\n      isRTLEnabled: !isRTLEnabled,\n      contextMenu: null\n    });\n  }\n\n  private _onDismiss() {\n    this.setState({\n      contextMenu: null\n    });\n  }\n}\n"],"sourceRoot":"../../../../src"}