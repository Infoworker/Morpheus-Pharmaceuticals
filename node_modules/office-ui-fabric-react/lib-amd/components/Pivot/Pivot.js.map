{"version":3,"sources":["components/Pivot/Pivot.tsx"],"names":[],"mappings":"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","file":"components/Pivot/Pivot.js","sourcesContent":["import * as React from 'react';\nimport { IPivotProps } from './Pivot.Props';\nimport { IPivotItemProps} from './PivotItem.Props';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { PivotItem } from './PivotItem';\nimport { PivotLinkFormat } from './Pivot.Props';\nimport { PivotLinkSize } from './Pivot.Props';\nimport { getId } from '../../utilities/object';\n\nimport './Pivot.scss';\nimport { css } from '../../utilities/css';\n\n/**\n *  Usage:\n *\n *   <Pivot>\n *     <PivotItem linkText=\"Foo\">\n *       <Label>Pivot #1</Label>\n *     </PivotItem>\n *     <PivotItem linkText=\"Bar\">\n *       <Label>Pivot #2</Label>\n *     </PivotItem>\n *     <PivotItem linkText=\"Bas\">\n *     <Label>Pivot #3</Label>\n *     </PivotItem>\n *   </Pivot>\n */\n\nexport interface IPivotState {\n  links: IPivotItemProps[];\n  selectedKey: string;\n  id: string;\n}\n\nexport class Pivot extends React.Component<IPivotProps, IPivotState> {\n  private _keyToIndexMapping: { [key: string]: number };\n\n  constructor(props: IPivotProps) {\n    super(props);\n\n    const links: IPivotItemProps[] = this._getPivotLinks(this.props);\n    let selectedKey: string;\n\n    if (props.initialSelectedKey) {\n      selectedKey = props.initialSelectedKey;\n    } else if (props.initialSelectedIndex) {\n      selectedKey = links[props.initialSelectedIndex].itemKey;\n    } else {\n      selectedKey = links[0].itemKey;\n    }\n\n    this.state = {\n      links,\n      selectedKey,\n      id: getId('Pivot')\n    } as IPivotState;\n\n    this._renderLink = this._renderLink.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: IPivotProps) {\n    const links: IPivotItemProps[] = this._getPivotLinks(nextProps);\n    const selectedKey: string = this._isKeyValid(this.state.selectedKey)\n      ? this.state.selectedKey\n      : links[0].itemKey;\n\n    this.setState({\n      links,\n      selectedKey\n    } as IPivotState);\n  }\n\n  public render() {\n    return (\n      <div>\n        { this._renderPivotLinks() }\n        { this._renderPivotItem() }\n      </div>\n    );\n  }\n\n  /**\n   * Renders the set of links to route between pivots\n   */\n  private _renderPivotLinks() {\n    return (\n      <FocusZone direction={ FocusZoneDirection.horizontal }>\n        <ul className={ css('ms-Pivot',\n          { 'ms-Pivot--large': this.props.linkSize === PivotLinkSize.large },\n          { 'ms-Pivot--tabs': this.props.linkFormat === PivotLinkFormat.tabs }) }\n          role='tablist'>\n          { this.state.links.map(this._renderLink) }\n        </ul>\n      </FocusZone>\n    );\n  }\n\n  /**\n   * Renders a pivot link\n   */\n  private _renderLink(link: IPivotItemProps) {\n    const { itemKey, itemCount } = link;\n    let { id } = this.state;\n    let countText;\n    if (itemCount !== undefined && this.props.linkFormat !== PivotLinkFormat.tabs) {\n      countText = <span className='ms-Pivot-count'>({ itemCount })</span>;\n    }\n\n    return (\n      <a\n        id={ id + '-tab' }\n        key={ itemKey }\n        className={ css('ms-Pivot-link', { 'is-selected': this.state.selectedKey === itemKey }) }\n        onClick={ this._onLinkClick.bind(this, itemKey) }\n        onKeyPress={ this._onKeyPress.bind(this, itemKey) }\n        aria-label={ link.ariaLabel }\n        role='tab'\n        aria-controls={ id + '-panel' }\n        aria-selected={ this.state.selectedKey === itemKey }>\n        { link.linkText }\n        { countText }\n      </a>\n    );\n  }\n\n  /**\n   * Renders the current Pivot Item\n   */\n  private _renderPivotItem() {\n    const itemKey: string = this.state.selectedKey;\n    const index = this._keyToIndexMapping[itemKey];\n    let { id } = this.state;\n\n    return (\n      <div className='pivotItem'\n        role='tabpanel'\n        id={ id + '-panel' }\n        aria-labelledby={ id + '-tab' }>\n        { React.Children.toArray(this.props.children)[index] }\n      </div>\n    );\n  }\n\n  /**\n   * Gets the set of PivotLinks as arrary of IPivotItemProps\n   * The set of Links is determined by child components of type PivotItem\n   */\n  private _getPivotLinks(props: IPivotProps): IPivotItemProps[] {\n    const links: IPivotItemProps[] = [];\n    this._keyToIndexMapping = {};\n\n    React.Children.map(props.children, (child: any, index: number) => {\n      if (typeof child === 'object' && child.type === PivotItem) {\n        const pivotItem = child as PivotItem;\n        const itemKey = pivotItem.props.itemKey || index.toString();\n\n        links.push({\n          linkText: pivotItem.props.linkText,\n          ariaLabel: pivotItem.props.ariaLabel,\n          itemKey: itemKey,\n          itemCount: pivotItem.props.itemCount\n        });\n        this._keyToIndexMapping[itemKey] = index;\n      }\n    });\n\n    return links;\n  }\n\n  /**\n   * whether the key exists in the pivot items.\n   */\n  private _isKeyValid(itemKey: string) {\n    return itemKey !== undefined && this._keyToIndexMapping[itemKey] !== undefined;\n  }\n\n  /**\n   * Handles the onClick event on PivotLinks\n   */\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>) {\n    ev.preventDefault();\n    this._updateSelectedItem(itemKey, ev);\n  }\n\n  /**\n   * Handle the onKeyPress eventon the PivotLinks\n   */\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>) {\n    ev.preventDefault();\n    if (ev.which === KeyCodes.enter) {\n      this._updateSelectedItem(itemKey);\n    }\n  }\n\n  /**\n   * Updates the state with the new selected index\n   */\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>) {\n    this.setState({\n      selectedKey: itemKey\n    } as IPivotState);\n\n    if (this.props.onLinkClick && this._keyToIndexMapping[itemKey] >= 0) {\n      const index = this._keyToIndexMapping[itemKey];\n\n      // React.Element<any> cannot directly convert to PivotItem.\n      const item = React.Children.toArray(this.props.children)[index] as any;\n\n      if (typeof item === 'object' && item.type === PivotItem) {\n        this.props.onLinkClick(item as PivotItem, ev);\n      }\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}