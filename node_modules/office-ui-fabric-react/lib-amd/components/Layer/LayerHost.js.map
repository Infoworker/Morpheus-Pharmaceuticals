{"version":3,"sources":["components/Layer/LayerHost.tsx"],"names":[],"mappings":"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","file":"components/Layer/LayerHost.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport {\n  BaseComponent,\n  autobind,\n  css,\n  findIndex,\n  getNativeProps,\n  divProperties\n} from '../../Utilities';\nimport { ProjectedLayer } from './ProjectedLayer';\nimport { ILayerProps } from './Layer.Props';\nimport { ILayerHostProps } from './LayerHost.Props';\n\nexport interface ILayer {\n  id: string;\n  parentElement: HTMLElement;\n  props: ILayerProps;\n  onMounted: (projectedLayer: ProjectedLayer) => void;\n}\n\nconst DEFAULT_HOST_ID = '__layerHost';\n/**\n * LayerHost provides a wrapper that acts as a passthrough, rendering the given children within it, but also\n * appending a div at the end, which projects all content wrapped in the Layer components within. Projecting\n * DOM to the end of the document allows for overlaying and stacking scenarios.\n *\n * Normally you do not need to interact directly with LayerHost. If you render Layers within content that isn't\n * wrapped within a LayerHost, a LayerHost will be created and appended to the end of the document body, where\n * layer content will then be projected. However in some circumstances you want Layered content to be rendered\n * in a specific place rather than document body (for example in a popup window or contained within a scrollable\n * region.) In those cases, wrap the content wihtin a LayerHost.\n *\n * @example\n * <LayerHost>\n *   <Layer>I will at the end of LayerHost.</Layer>\n *   <div>I will render normally.</div>\n * </LayerHost>\n **/\nexport class LayerHost extends BaseComponent<ILayerHostProps, {}> {\n  public static childContextTypes = {\n    layerHost: React.PropTypes.object\n  };\n\n  private _layers: ILayer[];\n  private _layerRefs: {\n    [key: string]: ProjectedLayer\n  };\n\n  public static getDefault(layerElement: HTMLElement): LayerHost {\n    let doc = layerElement.ownerDocument;\n    let hostElement = doc.getElementById(DEFAULT_HOST_ID);\n\n    if (hostElement) {\n      return hostElement[DEFAULT_HOST_ID] as LayerHost;\n    } else {\n      hostElement = doc.createElement('div');\n      hostElement.id = DEFAULT_HOST_ID;\n      doc.body.appendChild(hostElement);\n\n      let defaultHost = ReactDOM.render(<LayerHost />, hostElement) as LayerHost;\n\n      hostElement[DEFAULT_HOST_ID] = defaultHost;\n\n      return defaultHost;\n    }\n  }\n\n  constructor(props: ILayerHostProps) {\n    super(props);\n\n    this.state = {\n      layers: []\n    };\n\n    this._layers = [];\n    this._layerRefs = {};\n  }\n\n  public getChildContext() {\n    return {\n      layerHost: this as LayerHost\n    };\n  }\n\n  public render() {\n    let divProps = getNativeProps(this.props, divProperties);\n\n    return (\n      <div { ...divProps } className={ css('ms-LayerHost', this.props.className) }>\n        <Fabric>\n          { this.props.children }\n          <div className='ms-LayerHost-overlay'>\n            { this._layers.map(layer => (\n              <ProjectedLayer\n                key={layer.id }\n                layerId={ layer.id }\n                parentElement={ layer.parentElement }\n                defaultRemoteProps={ layer.props }\n                ref={ this._resolveLayer }\n                />\n            ))}\n          </div>\n        </Fabric>\n      </div>\n    );\n  }\n\n  public addLayer(id: string, parentElement: HTMLElement, props: ILayerProps, onMounted: (proxyLayer: ProjectedLayer) => void) {\n    this._layers.push({\n      id,\n      parentElement,\n      props,\n      onMounted\n    });\n    this.forceUpdate();\n  }\n\n  public removeLayer(id: string) {\n    let index = findIndex(this._layers, layer => layer.id === id);\n\n    if (index >= 0) {\n      this._layers.splice(index, 1);\n      delete this._layerRefs[id];\n      this.forceUpdate();\n    }\n  }\n\n  @autobind\n  private _resolveLayer(projectedLayer: ProjectedLayer) {\n    if (projectedLayer) {\n      let layerId = projectedLayer.getId();\n      let index = findIndex(this._layers, layer => layer.id === layerId);\n\n      if (index >= 0 && this._layerRefs[layerId] !== projectedLayer) {\n        this._layerRefs[layerId] = projectedLayer;\n        this._layers[index].onMounted(projectedLayer);\n      }\n    }\n  }\n\n}"],"sourceRoot":"../../../src"}