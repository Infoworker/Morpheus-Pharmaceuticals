{"version":3,"sources":["components/DocumentCard/DocumentCard.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAMA;QAAkC,gCAAwC;QAA1E;YAAkC,8BAAwC;QAiD1E,CAAC;QA5CQ,6BAAM,GAAb;YACE,IAAA,eAAiF,EAA3E,oBAAO,EAAE,4BAAW,EAAE,sBAAQ,EAAE,wBAAS,EAAE,cAAI,EAAE,4BAAW,CAAgB;YAClF,IAAI,UAAU,GAAG,CAAC,OAAO,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;YAEzD,gFAAgF;YAChF,IAAI,KAAK,CAAC;YACV,EAAE,CAAC,CAAC,IAAI,KAAK,qCAAgB,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;gBACrD,KAAK,GAAG;oBACN,iBAAiB,EAAE,WAAW;iBAC/B,CAAC;YACJ,CAAC;YAED,MAAM,CAAC,CACL,qBAAC,GAAG,IACF,SAAS,EACP,SAAG,CACD,iBAAiB,EACjB;gBACE,6BAA6B,EAAE,UAAU;gBACzC,0BAA0B,EAAE,IAAI,KAAK,qCAAgB,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK;aAC7E,EACD,SAAS,CAEZ,EACD,OAAO,EAAG,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAM,EAC7C,KAAK,EAAG,KAAO,GACb,QAAU,CACR,CACP,CAAC;QACJ,CAAC;QAGO,+BAAQ,GAAhB,UAAiB,EAAiC;YAChD,IAAA,eAAyC,EAAnC,oBAAO,EAAE,4BAAW,CAAgB;YAE1C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,OAAO,CAAC,EAAE,CAAC,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;gBACnC,iGAAiG;gBACjG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;gBACnC,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;YACvB,CAAC;QACH,CAAC;QA/Ca,yBAAY,GAAuB;YAC/C,IAAI,EAAE,qCAAgB,CAAC,MAAM;SAC9B,CAAC;QAiCF;YAAC,mBAAQ;oDAAA;QAaX,mBAAC;IAAD,CAjDA,AAiDC,CAjDiC,KAAK,CAAC,SAAS,GAiDhD;IAjDY,oBAAY,eAiDxB,CAAA","file":"components/DocumentCard/DocumentCard.js","sourcesContent":["import * as React from 'react';\nimport { IDocumentCardProps, DocumentCardType } from './DocumentCard.Props';\nimport { css } from '../../utilities/css';\nimport './DocumentCard.scss';\nimport { autobind } from '../../utilities/autobind';\n\nexport class DocumentCard extends React.Component<IDocumentCardProps, any> {\n  public static defaultProps: IDocumentCardProps = {\n    type: DocumentCardType.normal\n  };\n\n  public render() {\n    let { onClick, onClickHref, children, className, type, accentColor } = this.props;\n    let actionable = (onClick || onClickHref) ? true : false;\n\n    // Override the border color if an accent color was provided (compact card only)\n    let style;\n    if (type === DocumentCardType.compact && accentColor) {\n      style = {\n        borderBottomColor: accentColor\n      };\n    }\n\n    return (\n      <div\n        className={\n          css(\n            'ms-DocumentCard',\n            {\n              'ms-DocumentCard--actionable': actionable,\n              'ms-DocumentCard--compact': type === DocumentCardType.compact ? true : false\n            },\n            className\n          )\n        }\n        onClick={ actionable ? this._onClick : null }\n        style={ style }>\n        { children }\n      </div>\n    );\n  }\n\n  @autobind\n  private _onClick(ev: React.MouseEvent<HTMLElement>): void {\n    let { onClick, onClickHref } = this.props;\n\n    if (onClick) {\n      onClick(ev);\n    } else if (!onClick && onClickHref) {\n      // If no onClick Function was provided and we do have an onClickHref, redirect to the onClickHref\n      window.location.href = onClickHref;\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}