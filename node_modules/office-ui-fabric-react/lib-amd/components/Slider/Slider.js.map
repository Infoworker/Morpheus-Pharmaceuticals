{"version":3,"sources":["components/Slider/Slider.tsx"],"names":[],"mappings":"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","file":"components/Slider/Slider.js","sourcesContent":["import * as React from 'react';\nimport './Slider.scss';\nimport { ISliderProps, ISlider } from './Slider.Props';\nimport { BaseComponent } from '../../common/BaseComponent';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { Label } from '../../Label';\nimport { css } from '../../utilities/css';\nimport { getRTL as isRTL, getRTLSafeKeyCode } from '../../utilities/rtl';\nimport { getId } from '../../utilities/object';\nimport { autobind } from '../../utilities/autobind';\n\nexport interface ISliderState {\n  value?: number;\n  renderedValue?: number;\n}\n\nexport enum ValuePosition {\n  Previous,\n  Next\n}\n\nexport class Slider extends BaseComponent<ISliderProps, ISliderState> implements ISlider {\n  public static defaultProps: {} = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance,\n    root: HTMLElement,\n    sliderLine: HTMLElement,\n    thumb: HTMLElement\n  };\n\n  private _id: string;\n\n  constructor(props?: ISliderProps) {\n    super(props);\n\n    this._id = getId('Slider');\n\n    let value = props.value || props.defaultValue || props.min;\n\n    this.state = {\n      value: value,\n      renderedValue: value\n    };\n  }\n\n  /**\n   * Invoked when a component is receiving new props. This method is not called for the initial render.\n   */\n  public componentWillReceiveProps(newProps: ISliderProps): void {\n\n    if (newProps.value !== undefined) {\n      let value = Math.max(newProps.min, Math.min(newProps.max, newProps.value));\n\n      this.setState({\n        value: value,\n        renderedValue: value\n      });\n    }\n  }\n\n  public render(): React.ReactElement<{}> {\n    const { min, max, label, showValue, disabled, className, ariaLabel } = this.props;\n    const { value, renderedValue } = this.state;\n    const thumbOffsetPercent: number = (renderedValue - min) / (max - min) * 100;\n\n    const onMouseDownProp: {} = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };\n    const onTouchStartProp: {} = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };\n    const onKeyDownProp: {} = disabled ? {} : { onKeyDown: this._onKeyDown };\n\n    return (\n      <div\n        className={ css('ms-Slider', className, {\n          'ms-Slider-enabled': !disabled,\n          'ms-Slider-disabled': disabled\n        })}\n        ref='root'>\n        { label && (\n        <Label { ...ariaLabel ? {} : {'htmlFor' : this._id} }>\n          { label }\n        </Label>\n        ) }\n        <div className='ms-Slider-container'>\n          <button\n            className={ css('ms-Slider-slideBox', {\n              'ms-Slider-showValue': showValue,\n              'ms-Slider-showTransitions': ( renderedValue === value )\n            })}\n            id={ this._id }\n            role='slider'\n            disabled={ disabled }\n            aria-valuenow={ value }\n            aria-valuemin={ min }\n            aria-valuemax={ max }\n            { ...onMouseDownProp }\n            { ...onTouchStartProp }\n            { ...onKeyDownProp }\n            >\n            <div\n              ref='sliderLine'\n              className='ms-Slider-line'\n            >\n              <span\n                ref='thumb'\n                className='ms-Slider-thumb'\n                { ...ariaLabel ? { 'aria-label' : ariaLabel } : { } }\n                style={ isRTL() ?\n                  { 'right': thumbOffsetPercent + '%' } :\n                  { 'left': thumbOffsetPercent + '%' } }\n              />\n              <span className='ms-Slider-active' style={ {'width': thumbOffsetPercent + '%'} }></span>\n              <span className='ms-Slider-inactive' style={ {'width': (100 - thumbOffsetPercent) + '%'} }></span>\n            </div>\n          </button>\n          { showValue && <label className='ms-Label ms-Slider-value'>{ value }</label> }\n        </div>\n      </div>\n    ) as React.ReactElement<{}>;\n  }\n\n  public focus(): void {\n      if (this.refs.thumb) {\n          this.refs.thumb.focus();\n      }\n  }\n\n  public get value(): number {\n    return this.state.value;\n  }\n\n  @autobind\n  private _onMouseDownOrTouchStart(event: MouseEvent | TouchEvent): void {\n    if (event.type === 'mousedown') {\n      this._events.on(window, 'mousemove', this._onMouseMoveOrTouchMove, true);\n      this._events.on(window, 'mouseup', this._onMouseUpOrTouchEnd, true);\n    } else if (event.type === 'touchstart') {\n      this._events.on(window, 'touchmove', this._onMouseMoveOrTouchMove, true);\n      this._events.on(window, 'touchend', this._onMouseUpOrTouchEnd, true);\n    }\n\n    this._onMouseMoveOrTouchMove(event, true);\n  }\n\n  @autobind\n  private _onMouseMoveOrTouchMove(event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void {\n    const { max, min, step } = this.props;\n    const steps: number = (max - min) / step;\n    const sliderLength: number = this.refs.sliderLine.offsetWidth;\n    const stepLength: number = sliderLength / steps;\n    const sliderPositionRect: ClientRect = this.refs.sliderLine.getBoundingClientRect();\n    let currentSteps: number;\n\n    if (event.type === 'mousedown' || event.type === 'mousemove') {\n      currentSteps = isRTL() ?\n        (sliderPositionRect.right - (event as MouseEvent).clientX) / stepLength :\n        ((event as MouseEvent).clientX - sliderPositionRect.left) / stepLength;\n    } else if (event.type === 'touchstart' || event.type === 'touchmove') {\n      currentSteps = isRTL() ?\n        (sliderPositionRect.right - (event as TouchEvent).touches[0].clientX) / stepLength :\n        ((event as TouchEvent).touches[0].clientX - sliderPositionRect.left) / stepLength;\n    }\n\n    let currentValue: number;\n    let renderedValue: number;\n\n    // The value shouldn't be bigger than max or be smaller than min.\n    if (currentSteps > Math.floor(steps)) {\n      renderedValue = currentValue = max;\n    } else if (currentSteps < 0) {\n      renderedValue = currentValue = min;\n    } else {\n      renderedValue = min + step * currentSteps;\n      currentValue = min + step * Math.round(currentSteps);\n    }\n\n    this._updateValue(currentValue, renderedValue);\n\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  private _updateValue(value, renderedValue) {\n    let valueChanged = value !== this.state.value;\n\n    this.setState({\n      value,\n      renderedValue\n    }, () => {\n      if (valueChanged && this.props.onChange) {\n        this.props.onChange(this.state.value);\n      }\n    });\n  }\n\n  @autobind\n  private _onMouseUpOrTouchEnd(): void {\n\n    // Synchronize the renderedValue to the actual value.\n    this.setState({\n      renderedValue: this.state.value\n    });\n\n    this._events.off();\n  }\n\n  @autobind\n  private _onKeyDown(event: KeyboardEvent): void {\n    const value: number = this.state.value;\n    const { max, min, step } = this.props;\n\n    let diff: number = 0;\n    if (event.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      diff = -step;\n    } else if (event.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      diff = step;\n    } else {\n      return;\n    }\n    const newValue: number = Math.min(max, Math.max(min, value + diff));\n\n    this._updateValue(newValue, newValue);\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n}"],"sourceRoot":"../../../src"}