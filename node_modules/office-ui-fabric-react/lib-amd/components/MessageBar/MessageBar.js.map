{"version":3,"sources":["components/MessageBar/MessageBar.tsx"],"names":[],"mappings":"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","file":"components/MessageBar/MessageBar.js","sourcesContent":["import * as React from 'react';\nimport { Button, ButtonType } from '../../Button';\nimport './MessageBar.scss';\nimport { css } from '../../utilities/css';\nimport { IMessageBarProps, MessageBarType } from './MessageBar.Props';\nimport { getId } from '../../utilities/object';\n\nexport interface IMessageBarState {\n  labelId?: string;\n}\n\nexport class MessageBar extends React.Component<IMessageBarProps, IMessageBarState> {\n\n  public static defaultProps: IMessageBarProps = {\n    messageBarType: MessageBarType.info,\n    onDismiss: null,\n    isMultiline: true,\n  };\n\n  private ICON_MAP = {\n    [MessageBarType.info]:    'Info',\n    [MessageBarType.warning]: 'Info',\n    [MessageBarType.error]: 'ErrorBadge',\n    [MessageBarType.blocked]: 'Blocked',\n    [MessageBarType.remove]: 'Blocked', // TODO remove deprecated value at >= 1.0.0\n    [MessageBarType.severeWarning]: 'Warning',\n    [MessageBarType.success]: 'Completed'\n  };\n\n  constructor(props: IMessageBarProps) {\n    super(props);\n\n    this.state = {\n      labelId: getId('MessageBar')\n    };\n  }\n\n  public render(): JSX.Element {\n    let { isMultiline } = this.props;\n\n    return isMultiline ? this._renderMultiLine() : this._renderSingleLine();\n  }\n\n  private _getActionsDiv(): JSX.Element {\n    if (this.props.actions) {\n      return this.props.isMultiline ?\n        <div className='ms-MessageBar-actions'> { this.props.actions } </div> :\n        <div className='ms-MessageBar-actionsOneline'>\n          { this._getDismissDiv() }\n          { this.props.actions }\n        </div>;\n    }\n    return null;\n  }\n\n  private _getClassName(): string {\n    return css(this.props.className, 'ms-MessageBar', {\n      'ms-MessageBar': this.props.messageBarType === MessageBarType.info,\n      'ms-MessageBar--error': this.props.messageBarType === MessageBarType.error,\n      'ms-MessageBar--blocked': (this.props.messageBarType === MessageBarType.blocked) || (this.props.messageBarType === MessageBarType.remove), // TODO remove deprecated value at >= 1.0.0\n      'ms-MessageBar--severeWarning': this.props.messageBarType === MessageBarType.severeWarning,\n      'ms-MessageBar--success' : this.props.messageBarType === MessageBarType.success,\n      'ms-MessageBar--warning' : this.props.messageBarType === MessageBarType.warning\n    });\n  }\n\n  private _getDismissDiv(): JSX.Element {\n    if (this.props.onDismiss != null) {\n      return <Button\n        disabled={ false }\n        className='ms-MessageBar-dismissal'\n        buttonType={ ButtonType.icon }\n        onClick={ this.props.onDismiss }\n        icon='Cancel'\n        ariaLabel={ this.props.dismissButtonAriaLabel }\n      />;\n    }\n    return null;\n  }\n\n  private _getIconSpan(): JSX.Element {\n    return <div className='ms-MessageBar-icon'><i className={ `ms-Icon ms-Icon--${this.ICON_MAP[this.props.messageBarType]}` }></i></div>;\n  }\n\n  private _getInnerTextClassName(): string {\n    return this.props.onDismiss || this.props.actions ? 'ms-MessageBar-innerTextPadding' : 'ms-MessageBar-innerText';\n  }\n\n  private _renderMultiLine(): React.ReactElement<React.HTMLProps<HTMLAreaElement>> {\n    return (\n      <div className={ this._getClassName() + ' ms-MessageBar-multiline' } role='status' aria-live='polite' aria-controls='ms-MessageBar-text'>\n        <div className='ms-MessageBar-content'>\n          { this._getIconSpan() }\n          <div className='ms-MessageBar-actionables'>\n            { this._getDismissDiv() }\n            <div className='ms-MessageBar-text' id={ this.state.labelId }>\n              <span className={ this._getInnerTextClassName() }>\n              {  this.props.children }\n              </span>\n            </div>\n          { this._getActionsDiv() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderSingleLine(): React.ReactElement<React.HTMLProps<HTMLAreaElement>> {\n    return (\n      <div className={this._getClassName() + ' ms-MessageBar-singleline' } role='status' aria-live='polite' aria-controls='ms-MessageBar-text'>\n        <div className='ms-MessageBar-content'>\n          { this._getIconSpan() }\n          <div className='ms-MessageBar-actionables'>\n            <div className='ms-MessageBar-text' id={ this.state.labelId }>\n              <span className={ this._getInnerTextClassName() }>\n              {  this.props.children }\n              </span>\n            </div>\n          { this._getActionsDiv() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}