{"version":3,"sources":["components/Breadcrumb/Breadcrumb.tsx"],"names":[],"mappings":"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","file":"components/Breadcrumb/Breadcrumb.js","sourcesContent":["import * as React from 'react';\nimport { BaseComponent } from '../../common/BaseComponent';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { ContextualMenu } from '../../ContextualMenu';\nimport { IBreadcrumbProps, IBreadcrumbItem } from './Breadcrumb.Props';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { getRTL } from '../../utilities/rtl';\nimport { getId } from '../../utilities/object';\nimport { css } from '../../utilities/css';\nimport { autobind } from '../../utilities/autobind';\nimport './Breadcrumb.scss';\n\nexport interface IBreadcrumbState {\n  isOverflowOpen: boolean;\n  overflowAnchor?: HTMLElement;\n  renderedItems?: IBreadcrumbItem[];\n  renderedOverflowItems?: IBreadcrumbItem[];\n}\n\nconst OVERFLOW_KEY = 'overflow';\nconst OVERFLOW_WIDTH = 44;\n\nexport class Breadcrumb extends BaseComponent<IBreadcrumbProps, IBreadcrumbState> {\n  public static defaultProps: IBreadcrumbProps = {\n    items: [],\n    maxDisplayedItems: 999\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    renderingArea: HTMLElement;\n  };\n\n  private _breadcrumbItemWidths: { [key: string]: number };\n  private _id: string;\n\n  constructor(props: IBreadcrumbProps) {\n    super(props);\n\n    this._id = getId('Breadcrumb');\n    this.state = this._getStateFromProps(props);\n  }\n\n  public componentDidMount() {\n    this._updateItemMeasurements();\n    this._updateRenderedItems();\n\n    this._events.on(window, 'resize', this._updateRenderedItems);\n  }\n\n  public componentWillReceiveProps(nextProps: IBreadcrumbProps) {\n    this.setState(this._getStateFromProps(nextProps));\n    this._breadcrumbItemWidths = null;\n  }\n\n  public componentDidUpdate(prevProps: IBreadcrumbProps, prevStates: IBreadcrumbState) {\n    if (!this._breadcrumbItemWidths) {\n      this._updateItemMeasurements();\n      this._updateRenderedItems();\n    }\n  }\n\n  public render() {\n    let { className } = this.props;\n    let { isOverflowOpen, overflowAnchor, renderedItems, renderedOverflowItems } = this.state;\n    let overflowMenuId = this._id + '-overflow';\n\n    return (\n      <div className={ css('ms-Breadcrumb', className) } ref='renderingArea'>\n        <FocusZone direction={ FocusZoneDirection.horizontal }>\n          <ul className='ms-Breadcrumb-list'>\n          { renderedOverflowItems && renderedOverflowItems.length ? (\n            <li className='ms-Breadcrumb-overflow' key={ OVERFLOW_KEY } ref={ OVERFLOW_KEY }>\n              <div className='ms-Breadcrumb-overflowButton ms-Icon ms-Icon--More'\n                  onClick={ this._onOverflowClicked }\n                  data-is-focusable={ true }\n                  role='button'\n                  aria-haspopup='true'\n                  aria-owns={ isOverflowOpen ? overflowMenuId : null } />\n              <i className={ css('ms-Breadcrumb-chevron ms-Icon', getRTL() ? 'ms-Icon--ChevronLeft' : 'ms-Icon--ChevronRight') }></i>\n            </li>\n          ) : (null) }\n          { renderedItems.map(\n                (item, index) => (\n             <li className='ms-Breadcrumb-listItem' key={ item.key || String(index) } ref={ item.key || String(index) } >\n              <a className='ms-Breadcrumb-itemLink'\n                  onClick={ item.onClick ? this._onBreadcrumbClicked.bind(this, item) : null }\n                  href={ item.href }\n                  role={ item.onClick ? 'button' : 'link' }>\n                  { item.text }\n                  </a>\n              <i className={ css('ms-Breadcrumb-chevron ms-Icon', getRTL() ? 'ms-Icon--ChevronLeft' : 'ms-Icon--ChevronRight') }></i>\n            </li>\n          )) }\n          </ul>\n        </FocusZone>\n        { isOverflowOpen ? (\n          <ContextualMenu\n            targetElement={ overflowAnchor }\n            isBeakVisible={ true }\n            items={ renderedOverflowItems.map(\n                (item, index) => ({\n                  name: item.text,\n                  key: item.key,\n                  onClick: this._onBreadcrumbClicked.bind(this, item),\n                  href: item.href\n                })\n              ) }\n            id={ overflowMenuId }\n            directionalHint={ DirectionalHint.bottomLeftEdge }\n            onDismiss={ this._onOverflowDismissed } />\n        ) : (null) }\n      </div>\n    );\n  }\n\n  @autobind\n  private _onOverflowClicked(ev: React.MouseEvent<HTMLElement>) {\n    this.setState({\n      'isOverflowOpen' : !this.state.isOverflowOpen,\n      'overflowAnchor' : ev.currentTarget as HTMLElement\n    });\n  }\n\n  @autobind\n  private _onOverflowDismissed(ev: MouseEvent) {\n    this.setState({\n      'isOverflowOpen' : false,\n      'overflowAnchor' : null\n    });\n  }\n\n  @autobind\n  private _onBreadcrumbClicked(item: IBreadcrumbItem, ev: React.MouseEvent<HTMLElement>) {\n    if (item.onClick) {\n      item.onClick(ev, item);\n    }\n    this.setState({\n      'isOverflowOpen': false\n    });\n  }\n\n  private _updateItemMeasurements() {\n    let { items } = this.props;\n\n    if (!this._breadcrumbItemWidths) {\n      this._breadcrumbItemWidths = {};\n    }\n\n    for (let i = 0; i < items.length; i++) {\n      let item = items[i];\n\n      if (!this._breadcrumbItemWidths[item.key]) {\n        let el = this.refs[item.key] as HTMLElement;\n\n        this._breadcrumbItemWidths[item.key] = el.getBoundingClientRect().width;\n      }\n    }\n  }\n\n  private _updateRenderedItems() {\n    let { items, maxDisplayedItems } = this.props;\n    let renderingArea = this.refs.renderingArea;\n    let renderedItems = [];\n    let renderedOverflowItems = [].concat(items);\n    let consumedWidth = 0;\n\n    let style = window.getComputedStyle(renderingArea);\n    let availableWidth = renderingArea.clientWidth - parseInt(style.marginLeft, 10) - parseInt(style.marginRight, 10);\n\n    availableWidth -= OVERFLOW_WIDTH;\n\n    let i;\n    let minIndex = Math.max(0, renderedOverflowItems.length - maxDisplayedItems);\n\n    for (i = renderedOverflowItems.length - 1; i >= minIndex; i--) {\n      let item = renderedOverflowItems[i];\n      let itemWidth = this._breadcrumbItemWidths[item.key];\n\n      if ((consumedWidth + itemWidth) >= availableWidth) {\n        break;\n      } else {\n        consumedWidth += itemWidth;\n      }\n    }\n\n    renderedItems = renderedOverflowItems.splice(i + 1);\n\n    this.setState({\n      isOverflowOpen: this.state.isOverflowOpen,\n      overflowAnchor: this.state.overflowAnchor,\n      renderedItems: renderedItems,\n      renderedOverflowItems: renderedOverflowItems,\n    });\n  }\n\n  private _getStateFromProps(nextProps: IBreadcrumbProps) {\n    return {\n      isOverflowOpen: false,\n      overflowAnchor: null,\n      renderedItems: nextProps.items || [],\n      renderedOverflowItems: null\n    };\n  }\n\n}\n"],"sourceRoot":"../../../src"}