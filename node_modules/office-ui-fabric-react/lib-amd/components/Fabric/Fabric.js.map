{"version":3,"sources":["components/Fabric/Fabric.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;IAKA,IAAM,qBAAqB,GAAG;QAC5B,mBAAQ,CAAC,EAAE;QACX,mBAAQ,CAAC,IAAI;QACb,mBAAQ,CAAC,IAAI;QACb,mBAAQ,CAAC,KAAK;QACd,mBAAQ,CAAC,IAAI;QACb,mBAAQ,CAAC,GAAG;QACZ,mBAAQ,CAAC,GAAG;QACZ,mBAAQ,CAAC,MAAM;QACf,mBAAQ,CAAC,QAAQ;KAClB,CAAC;IAMF,qFAAqF;IACrF,yEAAyE;IACzE,IAAI,mBAAmB,GAAY,KAAK,CAAC;IAEzC,6HAA6H;IAC7H,EAAE,CAAC,CAAC,OAAM,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,QAAQ,CAAC,eAAe,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/G,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;IAED;QAA4B,0BAA8D;QAQxF;YACE,iBAAO,CAAC;YAER,IAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,mBAAmB;aACpC,CAAC;YAEF,IAAI,CAAC,OAAO,GAAG,IAAI,uBAAU,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;QAEM,kCAAiB,GAAxB;YACE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACnE,CAAC;QAEM,qCAAoB,GAA3B;YACE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;QAEM,uBAAM,GAAb;YACU,8CAAc,CAAgB;YACtC,IAAM,SAAS,GAAG,SAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACjE,iBAAiB,EAAE,cAAc;aAClC,CAAC,CAAC;YAEH,MAAM,CAAC,CACL,qBAAC,GAAG,gBAAM,IAAI,CAAC,KAAK,GAAG,SAAS,EAAG,SAAW,EAAC,GAAG,EAAC,MAAM,GAAG,CAC7D,CAAC;QACJ,CAAC;QAEO,6BAAY,GAApB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,QAAQ,CAAC;oBACZ,cAAc,EAAE,KAAK;iBACtB,CAAC,CAAC;gBAEH,mBAAmB,GAAG,KAAK,CAAC;YAC9B,CAAC;QACH,CAAC;QAEO,2BAAU,GAAlB,UAAmB,EAAiB;YAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,qBAAqB,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,IAAI,CAAC,QAAQ,CAAC;oBACZ,cAAc,EAAE,IAAI;iBACrB,CAAC,CAAC;gBAEH,mBAAmB,GAAG,IAAI,CAAC;YAC7B,CAAC;QACH,CAAC;QACH,aAAC;IAAD,CAzDA,AAyDC,CAzD2B,KAAK,CAAC,SAAS,GAyD1C;IAzDY,cAAM,SAyDlB,CAAA","file":"components/Fabric/Fabric.js","sourcesContent":["import * as React from 'react';\nimport { css } from '../../utilities/css';\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\nimport { KeyCodes } from '../../utilities/KeyCodes';\n\nconst DIRECTIONAL_KEY_CODES = [\n  KeyCodes.up,\n  KeyCodes.down,\n  KeyCodes.left,\n  KeyCodes.right,\n  KeyCodes.home,\n  KeyCodes.end,\n  KeyCodes.tab,\n  KeyCodes.pageUp,\n  KeyCodes.pageDown\n];\n\nexport interface IFabricState {\n  isFocusVisible?: boolean;\n}\n\n// We will track the last focus visibility state so that if we tear down and recreate\n// the Fabric component, we will use the last known value as the default.\nlet _lastIsFocusVisible: boolean = false;\n\n// Ensure that the HTML element has a dir specified. This helps to ensure RTL/LTR macros in css for all components will work.\nif (typeof(document) === 'object' && document.documentElement && !document.documentElement.getAttribute('dir')) {\n  document.documentElement.setAttribute('dir', 'ltr');\n}\n\nexport class Fabric extends React.Component<React.HTMLProps<HTMLDivElement>, IFabricState> {\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n  };\n\n  private _events: EventGroup;\n\n  constructor() {\n    super();\n\n    this.state = {\n      isFocusVisible: _lastIsFocusVisible\n    };\n\n    this._events = new EventGroup(this);\n  }\n\n  public componentDidMount() {\n    this._events.on(document.body, 'mousedown', this._onMouseDown, true);\n    this._events.on(document.body, 'keydown', this._onKeyDown, true);\n  }\n\n  public componentWillUnmount() {\n    this._events.dispose();\n  }\n\n  public render() {\n    const { isFocusVisible } = this.state;\n    const rootClass = css('ms-Fabric ms-font-m', this.props.className, {\n      'is-focusVisible': isFocusVisible\n    });\n\n    return (\n      <div { ...this.props } className={ rootClass } ref='root' />\n    );\n  }\n\n  private _onMouseDown() {\n    if (this.state.isFocusVisible) {\n      this.setState({\n        isFocusVisible: false\n      });\n\n      _lastIsFocusVisible = false;\n    }\n  }\n\n  private _onKeyDown(ev: KeyboardEvent) {\n    if (!this.state.isFocusVisible && DIRECTIONAL_KEY_CODES.indexOf(ev.which) > -1) {\n      this.setState({\n        isFocusVisible: true\n      });\n\n      _lastIsFocusVisible = true;\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}