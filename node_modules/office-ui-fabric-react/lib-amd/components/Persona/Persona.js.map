{"version":3,"sources":["components/Persona/Persona.tsx"],"names":[],"mappings":"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","file":"components/Persona/Persona.js","sourcesContent":["import * as React from 'react';\nimport { css } from '../../utilities/css';\nimport { Image, ImageFit } from '../../Image';\nimport {\n  IPersonaProps,\n  PersonaInitialsColor,\n  PersonaPresence,\n  PersonaSize\n} from './Persona.Props';\nimport {\n  PERSONA_INITIALS_COLOR,\n  PERSONA_PRESENCE,\n  PERSONA_SIZE\n} from './PersonaConsts';\nimport { getNativeProps, divProperties } from '../../utilities/properties';\n\nimport './Persona.scss';\n\nexport class Persona extends React.Component<IPersonaProps, any> {\n  public static defaultProps: IPersonaProps = {\n    primaryText: '',\n    size: PersonaSize.regular,\n    initialsColor: PersonaInitialsColor.blue,\n    presence: PersonaPresence.none\n  };\n\n  public render() {\n    let {\n      className,\n      size,\n      imageUrl,\n      imageInitials,\n      initialsColor,\n      presence,\n      primaryText,\n      secondaryText,\n      tertiaryText,\n      optionalText,\n      hidePersonaDetails\n    } = this.props;\n\n    let presenceElement = null;\n    if (presence !== PersonaPresence.none) {\n      let userPresence = PersonaPresence[presence],\n        statusIcon = null;\n      switch (userPresence) {\n        case 'online':\n          userPresence = 'SkypeCheck';\n          break;\n        case 'away':\n          userPresence = 'SkypeClock';\n          break;\n        case 'dnd':\n          userPresence = 'SkypeMinus';\n          break;\n        default:\n          userPresence = '';\n      }\n      if (userPresence) {\n        let iconClass = `ms-Persona-presenceIcon ms-Icon ms-Icon--${userPresence}`;\n        statusIcon = <i className={ iconClass }></i>;\n      }\n      presenceElement = <div className='ms-Persona-presence'>{ statusIcon }</div>;\n    }\n\n    let divProps = getNativeProps(this.props, divProperties);\n    let personaDetails = <div className='ms-Persona-details'>\n      <div className='ms-Persona-primaryText'>{ primaryText }</div>\n      { secondaryText ? (\n        <div className='ms-Persona-secondaryText'>{ secondaryText }</div>\n      ) : (null) }\n      <div className='ms-Persona-tertiaryText'>{ tertiaryText }</div>\n      <div className='ms-Persona-optionalText'>{ optionalText }</div>\n      { this.props.children }\n    </div>;\n\n    return (\n      <div { ...divProps } className={ css('ms-Persona', className, PERSONA_SIZE[size], PERSONA_PRESENCE[presence]) }>\n        { size !== PersonaSize.tiny && (\n          <div className='ms-Persona-imageArea'>\n            <div className={ css('ms-Persona-initials', PERSONA_INITIALS_COLOR[initialsColor]) }>{ imageInitials }</div>\n            <Image className='ms-Persona-image' imageFit={ ImageFit.cover } src={ imageUrl } />\n          </div>\n        ) }\n        { presenceElement }\n        { (!hidePersonaDetails || (size === PersonaSize.tiny)) && personaDetails }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}