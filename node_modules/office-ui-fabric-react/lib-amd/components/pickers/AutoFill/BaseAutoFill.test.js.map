{"version":3,"sources":["components/pickers/AutoFill/BaseAutoFill.test.tsx"],"names":[],"mappings":";;IASM,wBAAM,CAAU;IACtB,QAAQ,CAAC,cAAc,EAAE;QACvB,IAAI,QAAsB,CAAC;QAC3B,IAAI,aAA+B,CAAC;QACpC,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpC,UAAU,CAAC;YAET,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAC7B,oBAAC,2BAAY,GACX,GAAG,EAAG,UAAC,CAAC,IAAK,OAAA,QAAQ,GAAG,CAAC,EAAZ,CAAc,EAC3B,qBAAqB,EAAC,OAAO,EAAG,EAClC,QAAQ,CACT,CAAC;YACF,aAAa,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAgC,CAAqB,CAAC;QAC7F,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kBAAkB,EAAE,UAAC,IAAI;YAC1B,QAAQ,CAAC,MAAM,CACb,oBAAC,2BAAY,GACX,GAAG,EAAG,UAAC,CAAC,IAAK,OAAA,QAAQ,GAAG,CAAC,EAAZ,CAAc,EAC3B,kBAAkB,EAChB,UAAC,IAAI;gBACH,MAAM,CAAC,IAAI,KAAK,KAAK,EAAE,WAAW,GAAG,IAAI,CAAC,CAAC;gBAC3C,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,KAAK,EAAE,qBAAqB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC;gBAChD,IAAI,EAAE,CAAC;YACT,CACD,EACD,qBAAqB,EAAC,OAAO,EAAG,EAClC,QAAQ,CACT,CAAC;YACF,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;YAC5B,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mBAAmB,EAAE,UAAC,IAAI;YAC3B,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;YAC5B,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAC9C,QAAQ,CAAC,MAAM,CACb,oBAAC,2BAAY,GACX,GAAG,EAAG,UAAC,CAAC,IAAK,OAAA,QAAQ,GAAG,CAAC,EAAZ,CAAc,EAC3B,kBAAkB,EAChB,UAAC,IAAI;gBACH,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC9D,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE,WAAW,GAAG,IAAI,CAAC,CAAC;gBAC1C,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC;gBAChD,IAAI,EAAE,CAAC;YACT,CACD,EACD,qBAAqB,EAAC,OAAO,EAAG,EAClC,QAAQ,CACT,CAAC;YACF,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,mBAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,mBAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;QAC7G,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","file":"components/pickers/AutoFill/BaseAutoFill.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\n\nimport * as ReactDOM from 'react-dom';\nimport * as ReactTestUtils from 'react-addons-test-utils';\nimport { BaseAutoFill } from './BaseAutoFill';\nimport { KeyCodes } from '../../../utilities/KeyCodes';\n\nlet { assert } = chai;\ndescribe('BaseAutoFill', () => {\n  let autoFill: BaseAutoFill;\n  let autoFillInput: HTMLInputElement;\n  let baseNode = document.createElement('div');\n  document.body.appendChild(baseNode);\n  beforeEach(() => {\n\n    let component = ReactDOM.render(\n      <BaseAutoFill\n        ref={ (c) => autoFill = c }\n        suggestedDisplayValue='hello' />,\n      baseNode\n    );\n    autoFillInput = ReactDOM.findDOMNode(component as React.ReactInstance) as HTMLInputElement;\n  });\n\n  it('Input Text Works', (done) => {\n    ReactDOM.render(\n      <BaseAutoFill\n        ref={ (c) => autoFill = c }\n        onInputValueChange={\n          (text) => {\n            assert(text === 'hel', 'text was ' + text);\n            assert(autoFill.value === 'hel', 'autoFill value was ' + autoFill.value);\n            assert(autoFill.inputElement.value === 'hello');\n            done();\n          }\n        }\n        suggestedDisplayValue='hello' />,\n      baseNode\n    );\n    autoFillInput.value = 'hel';\n    ReactTestUtils.Simulate.change(autoFillInput);\n  });\n\n  it('Delete Text Works', (done) => {\n    autoFillInput.value = 'hel';\n    ReactTestUtils.Simulate.change(autoFillInput);\n    ReactDOM.render(\n      <BaseAutoFill\n        ref={ (c) => autoFill = c }\n        onInputValueChange={\n          (text) => {\n            assert(autoFill.value === 'he', 'text was ' + autoFill.value);\n            assert(text === 'he', 'text was ' + text);\n            assert(autoFill.inputElement.value === 'hello');\n            done();\n          }\n        }\n        suggestedDisplayValue='hello' />,\n      baseNode\n    );\n    ReactTestUtils.Simulate.keyDown(autoFillInput, { keyCode: KeyCodes.backspace, which: KeyCodes.backspace });\n  });\n});\n"],"sourceRoot":"../../../../src"}