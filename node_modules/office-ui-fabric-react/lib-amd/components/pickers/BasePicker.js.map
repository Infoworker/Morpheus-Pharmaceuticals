{"version":3,"sources":["components/pickers/BasePicker.tsx"],"names":[],"mappings":"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","file":"components/pickers/BasePicker.js","sourcesContent":["import * as React from 'react';\nimport { FocusZone } from '../../FocusZone';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { Selection, SelectionZone, SelectionMode } from '../../utilities/selection/index';\nimport { Suggestions } from './Suggestions/Suggestions';\nimport { ISuggestionsProps } from './Suggestions/Suggestions.Props';\nimport { SuggestionsController } from './Suggestions/SuggestionsController';\nimport { IBasePickerProps } from './BasePicker.Props';\nimport { BaseAutoFill } from './AutoFill/BaseAutoFill';\nimport { IPickerItemProps } from './PickerItem.Props';\nimport { BaseComponent } from '../../common/BaseComponent';\nimport {\n  css,\n  autobind,\n  KeyCodes,\n  getRTL\n} from '../../Utilities';\nimport './BasePicker.scss';\n\nexport interface IBasePickerState {\n  items?: any;\n  suggestedDisplayValue?: string;\n  moreSuggestionsAvailable?: boolean;\n  suggestionsVisible?: boolean;\n  suggestionsLoading?: boolean;\n}\n\nexport class BasePicker<T, P extends IBasePickerProps<T>> extends BaseComponent<P, IBasePickerState> {\n\n  protected selection: Selection;\n\n  protected root: HTMLElement;\n  protected input: BaseAutoFill;\n  protected focusZone: FocusZone;\n  protected suggestionElement: Suggestions<T>;\n\n  protected suggestionStore: SuggestionsController<T>;\n  protected SuggestionOfProperType = Suggestions as new (props: ISuggestionsProps<T>) => Suggestions<T>;\n  protected loadingTimer: number;\n  protected currentPromise: PromiseLike<any>;\n\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    let items: T[] = basePickerProps.defaultSelectedItems || [];\n\n    this.suggestionStore = new SuggestionsController<T>();\n    this.selection = new Selection({ onSelectionChanged: () => this.onSelectionChange() });\n    this.selection.setItems(items);\n    this.state = {\n      items: items,\n      suggestedDisplayValue: '',\n      moreSuggestionsAvailable: false\n    };\n  }\n\n  public componentWillReceiveProps(newProps: IBasePickerProps<T>, newState: IBasePickerState) {\n    if (newState.items && newState.items !== this.state.items) {\n      this.selection.setItems(newState.items);\n    }\n  }\n\n  public componentDidMount() {\n    this.selection.setItems(this.state.items);\n  }\n\n  public focus() {\n    this.focusZone.focus();\n  }\n  @autobind\n  public dismissSuggestions() {\n    this.setState({ suggestionsVisible: false });\n  }\n\n  public completeSuggestion() {\n    if (this.suggestionStore.hasSelectedSuggestion()) {\n      this.addItem(this.suggestionStore.currentSuggestion.item);\n      this.updateValue('');\n      this.input.clear();\n    }\n  }\n\n  public render() {\n    let { suggestedDisplayValue } = this.state;\n    return (\n      <div ref={ this._resolveRef('root') } className={ css('ms-BasePicker', this.props.className ? this.props.className : '') } onKeyDown={ this.onKeyDown }>\n        <SelectionZone selection={ this.selection } selectionMode={ SelectionMode.multiple }>\n          <FocusZone ref={ this._resolveRef('focusZone') } className='ms-BasePicker-text'>\n            { this.renderItems() }\n            <BaseAutoFill\n              className='ms-BasePicker-input'\n              ref={ this._resolveRef('input') }\n              onFocus={ this.onInputFocus }\n              onInputValueChange={ this.onInputChange }\n              suggestedDisplayValue={ suggestedDisplayValue }\n              aria-activedescendant={ 'sug-' + this.suggestionStore.currentIndex }\n              aria-owns='suggestion-list'\n              aria-expanded='true'\n              aria-haspopup='true'\n              autoCapitalize='off'\n              autoComplete='off' />\n          </FocusZone>\n        </SelectionZone>\n        { this.renderSuggestions() }\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element {\n    let TypedSuggestion = this.SuggestionOfProperType;\n    return this.state.suggestionsVisible ? (\n      <Callout\n        isBeakVisible={ false }\n        gapSpace={ 0 }\n        targetElement={ this.root }\n        onDismiss={ this.dismissSuggestions }\n        directionalHint={ getRTL() ? DirectionalHint.bottomRightEdge : DirectionalHint.bottomLeftEdge }>\n        <TypedSuggestion\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\n          onSuggestionClick={ this.onSuggestionClick }\n          suggestions={ this.suggestionStore.getSuggestions() }\n          ref={ this._resolveRef('suggestionElement') }\n          onGetMoreResults={ this.onGetMoreResults }\n          moreSuggestionsAvailable={ this.state.moreSuggestionsAvailable }\n          isLoading={ this.state.suggestionsLoading }\n          { ...this.props.pickerSuggestionsProps }\n          />\n      </Callout>\n    ) : (null);\n  }\n\n  protected renderItems(): JSX.Element[] {\n    let { onRenderItem } = this.props;\n    let { items } = this.state;\n    return items.map((item, index) => onRenderItem({\n      item,\n      index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item)\n    }));\n  }\n\n  protected resetFocus(index: number) {\n    let { items } = this.state;\n\n    if (items.length) {\n      let newEl: HTMLElement = this.root.querySelectorAll('[data-selection-index]')[Math.min(index, items.length - 1)] as HTMLElement;\n\n      if (newEl) {\n        this.focusZone.focusElement(newEl);\n      }\n    } else {\n      this.input.focus();\n    }\n  }\n\n  protected onSuggestionSelect() {\n    if (this.suggestionStore.currentSuggestion) {\n      let currentValue: string = this.input.value;\n      let itemValue: string = this.props.getTextFromItem(this.suggestionStore.currentSuggestion.item, currentValue);\n      this.setState({ suggestedDisplayValue: itemValue });\n    }\n  }\n\n  protected onSelectionChange() {\n    this.forceUpdate();\n  }\n\n  protected updateSuggestions(suggestions: any[]) {\n    this.suggestionStore.updateSuggestions(suggestions);\n    this.forceUpdate();\n  }\n\n  protected updateValue(updatedValue: string) {\n    let suggestions: T[] | PromiseLike<T[]> = this.props.onResolveSuggestions(updatedValue, this.state.items);\n    let suggestionsArray: T[] = suggestions as T[];\n    let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\n    if (Array.isArray(suggestionsArray)) {\n      this.resolveNewValue(updatedValue, suggestionsArray);\n    } else if (suggestionsPromiseLike.then) {\n      if (!this.loadingTimer) {\n        this.loadingTimer = this._async.setTimeout(() => this.setState({\n          suggestionsLoading: true\n        }), 500);\n      }\n\n      this.setState({\n        suggestionsVisible: this.input.value !== '' && this.input.inputElement === document.activeElement\n      });\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      let promise: PromiseLike<void> = this.currentPromise = suggestionsPromiseLike.then((newSuggestions: T[]) => {\n        if (promise === this.currentPromise) {\n          this.resolveNewValue(updatedValue, newSuggestions);\n          if (this.loadingTimer) {\n            this._async.clearTimeout(this.loadingTimer);\n            this.loadingTimer = undefined;\n          }\n        }\n      });\n    }\n  }\n\n  protected resolveNewValue(updatedValue: string, suggestions: T[]) {\n    this.suggestionStore.updateSuggestions(suggestions);\n    let itemValue: string = undefined;\n\n    if (this.suggestionStore.currentSuggestion) {\n      itemValue = this.props.getTextFromItem(this.suggestionStore.currentSuggestion.item, updatedValue);\n    }\n\n    this.setState({\n      suggestionsLoading: false,\n      suggestedDisplayValue: itemValue,\n      suggestionsVisible: this.input.value !== '' && this.input.inputElement === document.activeElement\n    });\n  }\n\n  protected onChange() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state.items);\n    }\n  }\n\n  @autobind\n  protected onInputChange(value: string) {\n    this.updateValue(value);\n    this.setState({ moreSuggestionsAvailable: true });\n  }\n\n  @autobind\n  protected onSuggestionClick(ev: React.MouseEvent<HTMLElement>, item: any, index: number) {\n    this.addItemByIndex(index);\n  }\n\n  @autobind\n  protected onInputFocus(ev: React.FocusEvent<HTMLInputElement | BaseAutoFill>) {\n    this.selection.setAllSelected(false);\n    if (this.input.value) {\n      this.setState({ suggestionsVisible: true });\n    }\n  }\n\n  @autobind\n  protected onKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    let value = this.input.value;\n\n    switch (ev.which) {\n      case KeyCodes.escape:\n        this.dismissSuggestions();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (value && this.suggestionStore.hasSelectedSuggestion()) {\n          this.completeSuggestion();\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n\n        break;\n\n      case KeyCodes.backspace:\n        this.onBackspace(ev);\n        break;\n\n      case KeyCodes.up:\n        if (ev.target === this.input.inputElement && this.suggestionStore.previousSuggestion()) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this.onSuggestionSelect();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (ev.target === this.input.inputElement) {\n          if (this.suggestionStore.nextSuggestion()) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.onSuggestionSelect();\n          }\n        }\n        break;\n    }\n  }\n\n  @autobind\n  protected onGetMoreResults() {\n    if (this.props.onGetMoreResults) {\n      let suggestions: T[] | PromiseLike<T[]> = this.props.onGetMoreResults(this.input.value, this.state.items);\n      let suggestionsArray: T[] = suggestions as T[];\n      let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n      if (Array.isArray(suggestionsArray)) {\n        this.updateSuggestions(suggestionsArray);\n      } else if (suggestionsPromiseLike.then) {\n        suggestionsPromiseLike.then((newSuggestions: T[]) => this.updateSuggestions(newSuggestions));\n      }\n    }\n    this.input.focus();\n    this.setState({ moreSuggestionsAvailable: false });\n  }\n\n  @autobind\n  protected addItemByIndex(index: number): void {\n    this.addItem(this.suggestionStore.getSuggestionAtIndex(index).item);\n    this.input.clear();\n    this.updateValue('');\n  }\n\n  @autobind\n  protected addItem(item: T) {\n    let newItems: T[] = this.state.items.concat([item]);\n    this.selection.setItems(newItems);\n    this.setState({ items: newItems }, () => this.onChange());\n  }\n\n  @autobind\n  protected removeItem(item: IPickerItemProps<T>) {\n    let { items } = this.state;\n    let index: number = items.indexOf(item);\n\n    if (index >= 0) {\n      let newItems: T[] = items.slice(0, index).concat(items.slice(index + 1));\n\n      this.selection.setItems(newItems);\n      this.setState({ items: newItems }, () => this.onChange());\n    }\n  }\n\n  @autobind\n  protected removeItems(itemsToRemove: any[]) {\n    let { items } = this.state;\n    let newItems: T[] = items.filter(item => itemsToRemove.indexOf(item) === -1);\n    let firstItemToRemove = this.selection.getSelection()[0];\n    let index: number = items.indexOf(firstItemToRemove);\n\n    this.selection.setItems(newItems);\n\n    this.setState({ items: newItems }, () => this.resetFocus(index));\n  }\n\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\n    if (this.state.items.length && !this.input.isValueSelected && this.input.cursorLocation === 0) {\n      this.removeItem(this.state.items[this.state.items.length - 1]);\n    } else if (this.selection.getSelectedCount() > 0) {\n      this.removeItems(this.selection.getSelection());\n    }\n  }\n}\n\nexport class BasePickerListBelow<T, P extends IBasePickerProps<T>> extends BasePicker<T, P> {\n  public render() {\n    let { suggestedDisplayValue } = this.state;\n\n    return (\n      <div>\n        <div ref={ this._resolveRef('root') }\n          className={ css('ms-BasePicker', this.props.className ? this.props.className : '') }\n          onKeyDown={ this.onKeyDown }>\n          <SelectionZone selection={ this.selection }\n            selectionMode={ SelectionMode.multiple }>\n            <div className='ms-BasePicker-text'>\n              <BaseAutoFill\n                className='ms-BasePicker-input'\n                ref={ this._resolveRef('input') }\n                onFocus={ this.onInputFocus }\n                onInputValueChange={ this.onInputChange }\n                suggestedDisplayValue={ suggestedDisplayValue }\n                aria-activedescendant={ 'sug-' + this.suggestionStore.currentIndex }\n                aria-owns='suggestion-list'\n                aria-expanded='true'\n                aria-haspopup='true'\n                autoCapitalize='off'\n                autoComplete='off'\n                />\n            </div>\n          </SelectionZone>\n        </div>\n        { this.renderSuggestions() }\n        <FocusZone ref={ this._resolveRef('focusZone') } className='ms-BasePicker-selectedItems'>\n          { this.renderItems() }\n        </FocusZone>\n\n      </div>\n    );\n  }\n\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\n    // override the existing backspace method to not do anything because the list items appear below.\n  }\n}\n"],"sourceRoot":"../../../src"}