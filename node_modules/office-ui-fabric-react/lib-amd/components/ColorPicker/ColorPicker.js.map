{"version":3,"sources":["components/ColorPicker/ColorPicker.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAiCA;QAAiC,+BAAuC;QACtE,qBAAY,KAAwB;YAClC,kBAAM,KAAK,CAAC,CAAC;YAEb,IAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,2BAAkB,CAAC,KAAK,CAAC,KAAK,CAAC;aACvC,CAAC;QACJ,CAAC;QAEM,4BAAM,GAAb;YACQ,4BAAK,CAAgB;YAE3B,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,gBAAgB;gBAC7B,qBAAC,GAAG,IAAC,SAAS,EAAC,sBAAsB;oBACnC,oBAAC,+BAAc,GAAC,KAAK,EAAG,KAAO,EAAC,WAAW,EAAG,IAAI,CAAC,YAAc,EAAE;oBACnE,oBAAC,yBAAW,GACV,SAAS,EAAC,QAAQ,EAClB,QAAQ,EAAG,CAAG,EACd,QAAQ,EAAG,sBAAe,EAC1B,YAAY,EAAG,KAAK,CAAC,CAAG,EACxB,SAAS,EAAG,IAAI,CAAC,WAAa,EAC9B;oBACF,oBAAC,yBAAW,GACV,SAAS,EAAC,UAAU,EACpB,YAAY,EAAG,EAAE,UAAU,EAAE,8CAA4C,KAAK,CAAC,GAAG,WAAQ,EAAI,EAC9F,QAAQ,EAAG,CAAG,EACd,QAAQ,EAAG,GAAK,EAChB,YAAY,EAAG,KAAK,CAAC,CAAG,EACxB,SAAS,EAAG,IAAI,CAAC,WAAa,EAC9B;oBACF,qBAAC,KAAK,IAAC,SAAS,EAAC,sBAAsB,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,EAAC,GAAG;wBACrE,qBAAC,KAAK;4BACJ,qBAAC,EAAE,IAAC,SAAS,EAAC,WAAW;gCACvB,qBAAC,EAAE,SAAC,KAAG,CAAK;gCACZ,qBAAC,EAAE,SAAC,KAAG,CAAK;gCACZ,qBAAC,EAAE,SAAC,OAAK,CAAK;gCACd,qBAAC,EAAE,SAAC,MAAI,CAAK;gCACb,qBAAC,EAAE,SAAC,OAAK,CAAK,CACX;yBACC;wBACR,qBAAC,KAAK;4BACJ,qBAAC,EAAE;gCACD,qBAAC,EAAE;oCAAC,oBAAC,qBAAS,GAAC,SAAS,EAAC,sBAAsB,EAAC,KAAK,EAAG,KAAK,CAAC,GAAK,EAAG;iCAAK;gCAC3E,qBAAC,EAAE,IAAC,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,EAAI;oCAAC,oBAAC,qBAAS,GAAC,SAAS,EAAC,sBAAsB,EAAC,KAAK,EAAG,KAAK,CAAC,CAAG,EAAE;iCAAK;gCACnG,qBAAC,EAAE,IAAC,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,EAAI;oCAAC,oBAAC,qBAAS,GAAC,SAAS,EAAC,sBAAsB,EAAC,KAAK,EAAG,KAAK,CAAC,CAAG,EAAG;iCAAK;gCACpG,qBAAC,EAAE,IAAC,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,EAAI;oCAAC,oBAAC,qBAAS,GAAC,SAAS,EAAC,sBAAsB,EAAC,KAAK,EAAG,KAAK,CAAC,CAAG,EAAG;iCAAK;gCACpG,qBAAC,EAAE,IAAC,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,EAAI;oCAAC,oBAAC,qBAAS,GAAC,SAAS,EAAC,sBAAsB,EAAC,KAAK,EAAG,KAAK,CAAC,CAAG,EAAG;iCAAK,CACjG;yBACC,CACF,CACJ;aACF,CACP,CAAC;QACJ,CAAC;QAGO,kCAAY,GAApB,UAAqB,CAAS,EAAE,CAAS;YACvC,IAAI,CAAC,YAAY,CAAC,iBAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC;QAGO,iCAAW,GAAnB,UAAoB,CAAS;YAC3B,IAAI,CAAC,YAAY,CAAC,gBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC;QAGO,iCAAW,GAAnB,UAAoB,CAAS;YAC3B,IAAI,CAAC,YAAY,CAAC,gBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC;QAEO,kCAAY,GAApB,UAAqB,QAAgB;YAC7B,8CAAc,CAAgB;YAEpC,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC;oBACZ,KAAK,EAAE,QAAQ;iBAChB,CAAC,CAAC;gBAEH,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACnB,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC;YACH,CAAC;QACH,CAAC;QA3BD;YAAC,mBAAQ;uDAAA;QAKT;YAAC,mBAAQ;sDAAA;QAKT;YAAC,mBAAQ;sDAAA;QAmBX,kBAAC;IAAD,CArFA,AAqFC,CArFgC,KAAK,CAAC,SAAS,GAqF/C;IArFY,mBAAW,cAqFvB,CAAA","file":"components/ColorPicker/ColorPicker.js","sourcesContent":["import * as React from 'react';\nimport { IColorPickerProps } from './ColorPicker.Props';\nimport { TextField } from '../../TextField';\nimport { ColorRectangle } from './ColorRectangle';\nimport { ColorSlider } from './ColorSlider';\nimport { autobind } from '../../utilities/autobind';\nimport {\n  IColor,\n  MAX_COLOR_HUE,\n  getColorFromString,\n  updateA,\n  updateH,\n  updateSV\n} from './colors';\nimport './ColorPicker.scss';\n\nexport interface IColorPickerState {\n  isOpen: boolean;\n  color: IColor;\n}\n\nexport interface IColor {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n  h: number;\n  s: number;\n  v: number;\n  hex: string;\n  str: string;\n}\n\nexport class ColorPicker extends React.Component<IColorPickerProps, any> {\n  constructor(props: IColorPickerProps) {\n    super(props);\n\n    this.state = {\n      color: getColorFromString(props.color)\n    };\n  }\n\n  public render() {\n    let { color } = this.state;\n\n    return (\n      <div className='ms-ColorPicker'>\n        <div className='ms-ColorPicker-panel'>\n          <ColorRectangle color={ color } onSVChanged={ this._onSVChanged }/>\n          <ColorSlider\n            className='is-hue'\n            minValue={ 0 }\n            maxValue={ MAX_COLOR_HUE }\n            initialValue={ color.h }\n            onChanged={ this._onHChanged }\n          />\n          <ColorSlider\n            className='is-alpha'\n            overlayStyle={ { background: `linear-gradient(to right, transparent 0, ${color.str} 100%)` } }\n            minValue={ 0 }\n            maxValue={ 100 }\n            initialValue={ color.a }\n            onChanged={ this._onAChanged }\n          />\n          <table className='ms-ColorPicker-table' cellPadding='0' cellSpacing='0'>\n            <thead>\n              <tr className='ms-font-s'>\n                <td>Hex</td>\n                <td>Red</td>\n                <td>Green</td>\n                <td>Blue</td>\n                <td>Alpha</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td><TextField className='ms-ColorPicker-input' value={ color.hex } /></td>\n                <td style={ { width: '18%' } }><TextField className='ms-ColorPicker-input' value={ color.r }/></td>\n                <td style={ { width: '18%' } }><TextField className='ms-ColorPicker-input' value={ color.g } /></td>\n                <td style={ { width: '18%' } }><TextField className='ms-ColorPicker-input' value={ color.b } /></td>\n                <td style={ { width: '18%' } }><TextField className='ms-ColorPicker-input' value={ color.a } /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  @autobind\n  private _onSVChanged(s: number, v: number) {\n    this._updateColor(updateSV(this.state.color, s, v));\n  }\n\n  @autobind\n  private _onHChanged(h: number) {\n    this._updateColor(updateH(this.state.color, h));\n  }\n\n  @autobind\n  private _onAChanged(a: number) {\n    this._updateColor(updateA(this.state.color, a));\n  }\n\n  private _updateColor(newColor: IColor) {\n    let { onColorChanged } = this.props;\n\n    if (newColor.str !== this.state.color.str) {\n      this.setState({\n        color: newColor\n      });\n\n      if (onColorChanged) {\n        onColorChanged(newColor.str);\n      }\n    }\n  }\n\n}\n"],"sourceRoot":"../../../src"}