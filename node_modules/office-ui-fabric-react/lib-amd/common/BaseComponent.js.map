{"version":3,"sources":["common/BaseComponent.ts"],"names":[],"mappings":"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","file":"common/BaseComponent.js","sourcesContent":["import * as React from 'react';\nimport { Async } from '../utilities/Async/Async';\nimport { EventGroup } from '../utilities/eventGroup/EventGroup';\nimport { IDisposable } from './IDisposable';\n\nexport class BaseComponent<P, S> extends React.Component<P, S> {\n  /**\n   * External consumers should override BaseComponent.onError to hook into error messages that occur from\n   * exceptions thrown from within components.\n   */\n  public static onError: ((errorMessage?: string, ex?: any) => void);\n\n  private __async: Async;\n  private __events: EventGroup;\n  private __disposables: IDisposable[];\n  private __resolves: { [ name: string ]: (ref: any) => any };\n\n  /**\n   * BaseComponent constructor\n   * @param {P} props The props for the component.\n   * @param {Object} deprecatedProps The map of deprecated prop names to new names, where the key is the old name and the\n   * value is the new name. If a prop is removed rather than renamed, leave the value undefined.\n   */\n  constructor(props?: P, deprecatedProps?: { [propName: string]: string }) {\n    super(props);\n\n    if (deprecatedProps) {\n      for (let propName in deprecatedProps) {\n        if (propName in props) {\n          _warnDeprecation(this, propName, deprecatedProps[propName]);\n        }\n      }\n    }\n\n    _makeAllSafe(this, BaseComponent.prototype, [\n      'componentWillMount',\n      'componentDidMount',\n      'shouldComponentUpdate',\n      'componentWillUpdate',\n      'componentWillReceiveProps',\n      'render',\n      'componentDidUpdate',\n      'componentWillUnmount'\n    ]);\n  }\n\n  /** If we have disposables, dispose them automatically on unmount. */\n  public componentWillUnmount() {\n    if (this.__disposables) {\n      for (let i = 0, len = this._disposables.length; i < len; i++) {\n        let disposable = this.__disposables[i];\n\n        if (disposable.dispose) {\n          disposable.dispose();\n        }\n      }\n      this.__disposables = null;\n    }\n  }\n\n  /** Gets the object's class name. */\n  public get className() {\n    let funcNameRegex = /function (.{1,})\\(/;\n    let results = (funcNameRegex).exec((this).constructor.toString());\n\n    return (results && results.length > 1) ? results[1] : '';\n  }\n\n  /** Allows subclasses to push things to this._disposables to be auto disposed. */\n  protected get _disposables(): IDisposable[] {\n    if (!this.__disposables) {\n      this.__disposables = [];\n    }\n    return this.__disposables;\n  }\n\n  /**\n   * Gets the async instance associated with the component, created on demand. The async instance gives\n   * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks\n   * will be cleared/ignored automatically after unmounting. The helpers within the async object also\n   * preserve the this pointer so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _async(): Async {\n    if (!this.__async) {\n      this.__async = new Async(this);\n      this._disposables.push(this.__async);\n    }\n\n    return this.__async;\n  }\n\n  /**\n   * Gets the event group instance assocaited with the component, created on demand. The event instance\n   * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks\n   * will be automatically disconnected after unmounting. The helpers within the events object also\n   * preserve the this reference so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _events(): EventGroup {\n    if (!this.__events) {\n      this.__events = new EventGroup(this);\n      this._disposables.push(this.__events);\n    }\n\n    return this.__events;\n  }\n\n  /**\n   * Helper to return a memoized ref resolver function.\n   * @params refName Name of the member to assign the ref to.\n   *\n   * @examples\n   * class Foo extends BaseComponent<...> {\n   *   private _root: HTMLElement;\n   *\n   *   public render() {\n   *     return <div ref={ this._resolveRef('_root') } />\n   *   }\n   * }\n   */\n  protected _resolveRef(refName: string) {\n    if (!this.__resolves) {\n      this.__resolves = {};\n    }\n    if (!this.__resolves[refName]) {\n      this.__resolves[refName] = (ref) => this[refName] = ref;\n    }\n    return this.__resolves[refName];\n  }\n}\n\n/**\n * Helper to override a given method with a wrapper method that can try/catch the original, but also\n * ensures that the BaseComponent's methods are called before the subclass's. This ensures that\n * componentWillUnmount in the base is called and that things in the _disposables array are disposed.\n */\nfunction _makeAllSafe(obj: BaseComponent<any, any>, prototype: Object, methodNames: string[]) {\n  for (let i = 0, len = methodNames.length; i < len; i++) {\n    _makeSafe(obj, prototype, methodNames[i]);\n  }\n}\n\nfunction _makeSafe(obj: BaseComponent<any, any>, prototype: Object, methodName: string) {\n  let classMethod = obj[methodName];\n  let prototypeMethod = prototype[methodName];\n\n  if (classMethod || prototypeMethod) {\n    obj[methodName] = function() {\n      let retVal;\n\n      try {\n        if (prototypeMethod) {\n          retVal = prototypeMethod.apply(this, arguments);\n        }\n        if (classMethod) {\n          retVal = classMethod.apply(this, arguments);\n        }\n      } catch (e) {\n        const errorMessage = `Exception in ${ obj.className }.${ methodName }(): ${ typeof e === 'string' ? e : e.stack }`;\n\n        if (BaseComponent.onError) {\n          BaseComponent.onError(errorMessage, e);\n        }\n      }\n\n      return retVal;\n    };\n  }\n}\n\nfunction _warnDeprecation(obj: BaseComponent<any, any>, propertyName: string, newPropertyName: string) {\n  if (console && console.warn) {\n    let deprecationMessage = `${ obj.className } property '${ propertyName }' was used but has been deprecated.`;\n\n    if (newPropertyName) {\n      deprecationMessage += ` Use '${ newPropertyName }' instead.`;\n    }\n\n    console.warn(deprecationMessage);\n  }\n}\n\nBaseComponent.onError = (errorMessage) => {\n  console.error(errorMessage);\n  throw errorMessage;\n};\n"],"sourceRoot":"../../src"}