{"version":3,"sources":["utilities/focus.test.tsx"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sCAAsC;AAEtC,IAAY,QAAQ,WAAM,WAAW,CAAC,CAAA;AACtC,IAAY,cAAc,WAAM,yBAAyB,CAAC,CAAA;AACpD,wBAAM,CAAU;AAEtB,sBAAiC,SAAS,CAAC,CAAA;AAE3C,IAAI,cAAc,CAAC;AACnB,IAAI,eAAe,CAAC;AACpB,IAAI,QAAQ,CAAC;AAEb,4BAA4B,OAAgC;IAC1D,IAAM,SAAS,GAAG,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC7D,IAAM,WAAW,GAAY,QAAQ,CAAC,WAAW,CAAC,SAAgC,CAAC,CAAC;IACpF,MAAM,CAAC,WAA0B,CAAC;AACpC,CAAC;AAED;IACE,cAAc,GAAG,kBAAkB,CACjC,qBAAC,GAAG,KAAC,eAAe,GAAG,KAAO;QAC5B,qBAAC,MAAM,QAAU;KACb,CACQ,CAAC;IACjB,eAAe,GAAG,kBAAkB,CAClC,qBAAC,GAAG,KAAC,eAAe,GAAG,IAAM;QAC3B,qBAAC,MAAM,QAAU;KACb,CACQ,CAAC;IACjB,QAAQ,GAAG,kBAAkB,CAC3B,qBAAC,GAAG;QACF,qBAAC,MAAM,QAAU;KACb,CACQ,CAAC;IAChB,QAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;AACrC,CAAC;AAED,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,UAAU,CAAC,cAAM,OAAA,WAAW,EAAE,EAAb,CAAa,CAAC,CAAC;IAChC,EAAE,CAAC,2CAA2C,EAAE;QAC9C,MAAM,CAAC,wBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC5C,MAAM,CAAC,wBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE;QACxE,MAAM,CAAC,wBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,qDAAqD,CAAC,CAAC;IACzG,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"utilities/focus.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\n\nimport * as ReactDOM from 'react-dom';\nimport * as ReactTestUtils from 'react-addons-test-utils';\nlet { expect } = chai;\n\nimport { isElementVisible } from './focus';\n\nlet _hiddenElement;\nlet _visibleElement;\nlet _element;\n\nfunction renderIntoDocument(element: React.ReactElement<any>): HTMLElement {\n  const component = ReactTestUtils.renderIntoDocument(element);\n  const renderedDOM: Element = ReactDOM.findDOMNode(component as React.ReactInstance);\n  return renderedDOM as HTMLElement;\n}\n\nfunction _initialize() {\n  _hiddenElement = renderIntoDocument(\n    <div data-is-visible={ false }>\n      <button></button>\n    </div>\n  ) as HTMLElement;\n  _visibleElement = renderIntoDocument(\n    <div data-is-visible={ true }>\n      <button></button>\n    </div>\n  ) as HTMLElement;\n  _element = renderIntoDocument(\n    <div>\n      <button></button>\n    </div>\n  ) as HTMLElement;\n  (_element as any).isVisible = true;\n}\n\ndescribe('isElementVisible', () => {\n  beforeEach(() => _initialize());\n  it('returns false if data-is-visible is false', () => {\n    expect(isElementVisible(_hiddenElement)).equals(false, 'Element is not visible');\n  });\n\n  it('returns true if data-is-visible is true', () => {\n    expect(isElementVisible(_visibleElement)).equals(true, 'Element is visible');\n  });\n\n  it('returns true if data-is-visible is undefined but element is visible', () => {\n    expect(isElementVisible(_element)).equals(true, 'Element is visible but data-is-visible is undefined');\n  });\n\n});\n"],"sourceRoot":"../../src"}