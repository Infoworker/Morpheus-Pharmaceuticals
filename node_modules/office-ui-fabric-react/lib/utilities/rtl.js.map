{"version":3,"sources":["utilities/rtl.ts"],"names":[],"mappings":";AAAA,yBAAyB,YAAY,CAAC,CAAA;AACtC,oBAA4B,OAAO,CAAC,CAAA;AAEpC,IAAI,MAAM,GAAY,KAAK,CAAC;AAE5B;;GAEG;AACH;IACE,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,iBAAW,EAAE,CAAC;QAExB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,MAAM,GAAG,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;QAClE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CACb,+EAA+E;gBAC/E,iDAAiD,CAChD,CAAC;QACN,CAAC;IACH,CAAC;IAED,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAfe,cAAM,SAerB,CAAA;AAED;;GAEG;AACH,gBAAuB,KAAc;IACnC,IAAI,GAAG,GAAG,iBAAW,EAAE,CAAC;IAExB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACR,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;IACjE,CAAC;IAED,MAAM,GAAG,KAAK,CAAC;AACjB,CAAC;AARe,cAAM,SAQrB,CAAA;AAED;;GAEG;AACH,2BAAkC,GAAW;IAC3C,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACb,EAAE,CAAC,CAAC,GAAG,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,GAAG,GAAG,mBAAQ,CAAC,KAAK,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,mBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YAClC,GAAG,GAAG,mBAAQ,CAAC,IAAI,CAAC;QACtB,CAAC;IACH,CAAC;IAED,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAVe,yBAAiB,oBAUhC,CAAA","file":"utilities/rtl.js","sourcesContent":["import { KeyCodes } from './KeyCodes';\nimport { getDocument } from './dom';\n\nlet _isRTL: boolean = false;\n\n/**\n * Gets the rtl state of the page (returns true if in rtl.)\n */\nexport function getRTL(): boolean {\n  if (_isRTL === undefined) {\n    let doc = getDocument();\n\n    if (doc) {\n      _isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n    } else {\n      throw new Error(\n        'getRTL was called in a server environment without setRTL being called first. ' +\n        'Call setRTL to set the correct direction first.'\n        );\n    }\n  }\n\n  return _isRTL;\n}\n\n/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n */\nexport function setRTL(isRTL: boolean) {\n  let doc = getDocument();\n\n  if (doc) {\n    doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\n  }\n\n  _isRTL = isRTL;\n}\n\n/**\n * Returns the given key, but flips right/left arrows if necessary.\n */\nexport function getRTLSafeKeyCode(key: number): number {\n  if (getRTL()) {\n    if (key === KeyCodes.left) {\n      key = KeyCodes.right;\n    } else if (key === KeyCodes.right) {\n      key = KeyCodes.left;\n    }\n  }\n\n  return key;\n}\n"],"sourceRoot":"../../src"}