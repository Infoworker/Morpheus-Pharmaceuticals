{"version":3,"sources":["components/Layer/ProjectedLayer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,0BAMO,iBAAiB,CAAC,CAAA;AAEzB,QAAO,cAAc,CAAC,CAAA;AAiBtB;;;GAGG;AACH;IAAoC,kCAAyD;IAI3F,wBAAY,KAA4B;QACtC,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC;IAC/C,CAAC;IAEM,8CAAqB,GAA5B;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC/B,CAAC;IAEM,0CAAiB,GAAxB;QACE,4BAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IACrC,CAAC;IAEM,+BAAM,GAAb;QACE,IAAI,WAAW,GAAG,0BAAc,CAAkC,IAAI,CAAC,YAAY,EAAE,yBAAa,CAAC,CAAC;QAEpG,iGAAiG;QACjG,mGAAmG;QACnG,yEAAyE;QAEzE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1B,OAAO,WAAW,CAAC,QAAQ,CAAC;QAC9B,CAAC;QAED,MAAM,CAAC,CACL,qBAAC,GAAG,gBACG,WAAW,GAChB,SAAS,EAAG,eAAG,CAAC,mBAAmB,EAAE,WAAW,CAAC,SAAS,CAAG,EAC7D,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAG,GACtC,CACL,CAAC;IACJ,CAAC;IAEM,8BAAK,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;IAC5B,CAAC;IAEM,qCAAY,GAAnB,UAAoB,WAAgB;QAClC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACH,qBAAC;AAAD,CAnDA,AAmDC,CAnDmC,yBAAa,GAmDhD;AAnDY,sBAAc,iBAmD1B,CAAA","file":"components/Layer/ProjectedLayer.js","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  css,\n  divProperties,\n  getNativeProps,\n  setVirtualParent\n} from '../../Utilities';\nimport { ILayerProps } from './Layer.Props';\nimport './Layer.scss';\n\nexport interface IProjectedLayerProps extends React.Props<ProjectedLayer> {\n  /** Indicates a unique id for the layer, if applicable. */\n  layerId: string;\n\n  /** Virtual parent element. */\n  parentElement: HTMLElement;\n\n  /** Indicates the layer to redirect to. */\n  defaultRemoteProps: ILayerProps;\n}\n\nexport interface IProjectedLayerState {\n  isMounted: boolean;\n}\n\n/**\n * ProjectedLayer is an internal helper component that projects the contents rendered within a Layer. It is created\n * by the corresponding LayerHost that the originating Layer communicates with.\n */\nexport class ProjectedLayer extends BaseComponent<IProjectedLayerProps, IProjectedLayerState> {\n  private _rootElement: HTMLElement;\n  private _remoteProps: ILayerProps;\n\n  constructor(props?: IProjectedLayerProps) {\n    super(props);\n\n    this.state = {\n      isMounted: false\n    };\n\n    this._remoteProps = props.defaultRemoteProps;\n  }\n\n  public shouldComponentUpdate() {\n    return !this.state.isMounted;\n  }\n\n  public componentDidMount() {\n    setVirtualParent(this._rootElement, this.props.parentElement);\n    this.setState({ isMounted: true });\n  }\n\n  public render() {\n    let remoteProps = getNativeProps<React.HTMLProps<HTMLDivElement>>(this._remoteProps, divProperties);\n\n    // If this is the first render, let's avoid rendering children until we're certain that we've set\n    // the virtual parent. After that, we can safely render the children, which in turn can safely call\n    // dom utilities like elementContains, which respects the virtual parent.\n\n    if (!this.state.isMounted) {\n      delete remoteProps.children;\n    }\n\n    return (\n      <div\n        { ...remoteProps }\n        className={ css('ms-ProjectedLayer', remoteProps.className) }\n        ref={ this._resolveRef('_rootElement') }\n        />\n    );\n  }\n\n  public getId() {\n    return this.props.layerId;\n  }\n\n  public projectProps(remoteProps: any) {\n    this._remoteProps = remoteProps;\n    this.forceUpdate();\n  }\n}\n"],"sourceRoot":"../../../src"}