{"version":3,"sources":["components/Tooltip/Tooltip.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,uCAAuC;AACvC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sCAAsC;AACtC,8BAA8B,4BAA4B,CAAC,CAAA;AAC3D,8BAA4C,iBAAiB,CAAC,CAAA;AAC9D,wBAAwB,eAAe,CAAC,CAAA;AACxC,oBAAoB,qBAAqB,CAAC,CAAA;AAC1C,gCAAgC,8BAA8B,CAAC,CAAA;AAC/D,2BAA8C,4BAA4B,CAAC,CAAA;AAC3E,QAAO,gBAAgB,CAAC,CAAA;AAExB;IAA6B,2BAAiC;IAA9D;QAA6B,8BAAiC;IAkC9D,CAAC;IAnBQ,wBAAM,GAAb;QACE,IAAA,eAAiF,EAA3E,gCAAa,EAAE,oBAAO,EAAE,8BAAY,EAAE,oCAAe,EAAE,gBAAK,CAAgB;QAElF,MAAM,CAAC,CACL,oBAAC,iBAAO,YACN,SAAS,EAAG,SAAG,CAAC,YAAY,EAAE,SAAO,4BAAY,CAAC,KAAK,CAAC,UAAO,CAAG,EAClE,aAAa,EAAG,aAAe,EAC/B,eAAe,EAAG,eAAiB,GAC/B,YAAY,EACX,2BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,0BAAa,CAAC;YAE9C,qBAAC,GAAG,IAAC,SAAS,EAAC,oBAAoB;gBACjC,qBAAC,CAAC,IAAC,SAAS,EAAC,oBAAoB,GAC7B,OAAS,CACT;aACA;SACE,CACX,CAAC;IACJ,CAAC;IA/BD,+BAA+B;IACjB,oBAAY,GAAG;QAC3B,eAAe,EAAG,iCAAe,CAAC,SAAS;QAC3C,KAAK,EAAE,4BAAY,CAAC,MAAM;QAC1B,YAAY,EAAE;YACZ,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,CAAC;YACX,eAAe,EAAE,IAAI;YACrB,UAAU,EAAE,KAAK;SAClB;KACF,CAAC;IAqBJ,cAAC;AAAD,CAlCA,AAkCC,CAlC4B,6BAAa,GAkCzC;AAlCY,eAAO,UAkCnB,CAAA","file":"components/Tooltip/Tooltip.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport { BaseComponent } from '../../common/BaseComponent';\nimport { ITooltipProps, TooltipDelay } from './Tooltip.Props';\nimport { Callout } from '../../Callout';\nimport { css } from '../../utilities/css';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { getNativeProps, divProperties } from '../../utilities/properties';\nimport './Tooltip.scss';\n\nexport class Tooltip extends BaseComponent<ITooltipProps, any> {\n\n  // Specify default props values\n  public static defaultProps = {\n    directionalHint:  DirectionalHint.topCenter,\n    delay: TooltipDelay.medium,\n    calloutProps: {\n      isBeakVisible: true,\n      beakWidth: 16,\n      gapSpace: 8,\n      setInitialFocus: true,\n      doNotLayer: false\n    }\n  };\n\n  public render() {\n    let { targetElement, content, calloutProps, directionalHint, delay } = this.props;\n\n    return (\n      <Callout\n        className={ css('ms-Tooltip', `has-${TooltipDelay[delay]}Delay`) }\n        targetElement={ targetElement }\n        directionalHint={ directionalHint }\n        {...calloutProps}\n        { ...getNativeProps(this.props, divProperties) }\n      >\n        <div className='ms-Tooltip-content'>\n          <p className='ms-Tooltip-subText'>\n            { content }\n          </p>\n        </div>\n      </Callout>\n    );\n  }\n}"],"sourceRoot":"../../../src"}