{"version":3,"sources":["components/Popup/Popup.tsx"],"names":[],"mappings":"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","file":"components/Popup/Popup.js","sourcesContent":["import * as React from 'react';\nimport { IPopupProps } from './Popup.Props';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { BaseComponent } from '../../common/BaseComponent';\nimport { getNativeProps, divProperties } from '../../Utilities';\nimport { doesElementContainFocus } from '../../utilities/focus';\nimport { getDocument } from '../../utilities/dom';\n\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport class Popup extends BaseComponent<IPopupProps, {}> {\n\n  public static defaultProps: IPopupProps = {\n    shouldRestoreFocus: true\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n  };\n\n  private _originalFocusedElement: HTMLElement;\n  private _containsFocus: boolean;\n\n  public componentWillMount() {\n    this._originalFocusedElement = getDocument().activeElement as HTMLElement;\n  }\n\n  public componentDidMount(): void {\n    this._events.on(this.refs.root, 'keydown', this._onKeyDown);\n    this._events.on(this.refs.root, 'focus', () => this._containsFocus = true, true);\n    this._events.on(this.refs.root, 'blur', () => this._containsFocus = false, true);\n    if (doesElementContainFocus(this.refs.root)) {\n      this._containsFocus = true;\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (\n      this.props.shouldRestoreFocus &&\n      this._originalFocusedElement &&\n      this._containsFocus &&\n      this._originalFocusedElement as any !== window) {\n      // This slight delay is required so that we can unwind the stack, let react try to mess with focus, and then\n      // apply the correct focus. Without the setTimeout, we end up focusing the correct thing, and then React wants\n      // to reset the focus back to the thing it thinks should have been focused.\n      setTimeout(() => {\n        if (this._originalFocusedElement) {\n          this._originalFocusedElement.focus();\n        }\n      }, 0);\n    }\n  }\n\n  public render() {\n    let { role, className, ariaLabelledBy, ariaDescribedBy } = this.props;\n\n    return (\n      <div\n        ref='root'\n        { ...getNativeProps(this.props, divProperties) }\n        className={ className }\n        role={ role }\n        aria-labelledby={ ariaLabelledBy }\n        aria-desribedby={ ariaDescribedBy }>\n        { this.props.children }\n      </div>\n    );\n  }\n\n  private _onKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    switch (ev.which) {\n      case KeyCodes.escape:\n\n        if (this.props.onDismiss) {\n          this.props.onDismiss();\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n\n        break;\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}