{"version":3,"sources":["demo/pages/ContextualMenuPage/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","file":"demo/pages/ContextualMenuPage/examples/ContextualMenu.Checkmarks.Example.js","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, IContextualMenuItem, DirectionalHint, Button } from '../../../../index';\nimport './ContextualMenuExample.scss';\n\nexport interface IContextualMenuMultiselectExampleState {\n  selection?: { [ key: string]: boolean };\n  target?: {x: number, y: number};\n  isContextMenuVisible?: boolean;\n}\n\nlet keys: string[] = [ 'newItem', 'share', 'mobile', 'enablePrint', 'enableMusic', 'newSub', 'emailMessage', 'calendarEvent' ];\n\nexport class ContextualMenuCheckmarksExample extends React.Component<any, IContextualMenuMultiselectExampleState> {\n\n  constructor() {\n    super();\n\n    this._onToggleSelect = this._onToggleSelect.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onDismiss = this._onDismiss.bind(this);\n\n    this.state = {\n      selection: {},\n      isContextMenuVisible: false\n    };\n  }\n\n  public render() {\n    let { selection } = this.state;\n\n    return (\n      <div>\n        <Button onClick={this._onClick}> Click for ContextualMenu </Button>\n        { this.state.isContextMenuVisible ? (\n        <ContextualMenu\n          targetPoint={this.state.target}\n          useTargetPoint={true}\n          shouldFocusOnMount={ false }\n          onDismiss={this._onDismiss}\n          directionalHint={DirectionalHint.bottomLeftEdge}\n          items={\n            [\n              {\n                key: keys[0],\n                name: 'New',\n                canCheck: true,\n                checked: selection[keys[0]],\n                onClick: this._onToggleSelect\n              },\n              {\n                key: keys[1],\n                name: 'Share',\n                canCheck: true,\n                checked: selection[keys[1]],\n                onClick: this._onToggleSelect\n              },\n              {\n                key: keys[2],\n                name: 'Mobile',\n                canCheck: true,\n                checked: selection[keys[2]],\n                onClick: this._onToggleSelect\n              },\n              {\n                key: 'divider_1',\n                name: '-',\n              },\n\n              {\n                key: keys[3],\n                name: 'Print',\n                canCheck: true,\n                checked: selection[keys[3]],\n                onClick: this._onToggleSelect\n              },\n              {\n                key: keys[4],\n                name: 'Music',\n                canCheck: true,\n                checked: selection[keys[4]],\n                onClick: this._onToggleSelect\n              },\n              {\n                key: keys[5],\n                items: [\n                  {\n                    key: keys[6],\n                    name: 'Email message',\n                    canCheck: true,\n                    checked: selection[keys[6]],\n                    onClick: this._onToggleSelect\n                  },\n                  {\n                    key: keys[7],\n                    name: 'Calendar event',\n                    canCheck: true,\n                    checked: selection[keys[7]],\n                    onClick: this._onToggleSelect\n                  }\n                ],\n                name: 'New'\n              },\n            ]\n          }\n        />) : (null)}\n       </div>\n    );\n  }\n\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem) {\n    let { selection } = this.state;\n\n    selection[item.key] = !selection[item.key];\n\n    this.setState({\n      selection: selection\n    });\n  }\n\n  private _onClick(event: React.MouseEvent<HTMLButtonElement>) {\n    this.setState({target: {x: event.clientX, y: event.clientY}, isContextMenuVisible: true});\n  }\n\n  private _onDismiss() {\n    this.setState({isContextMenuVisible: false});\n  }\n\n}\n"],"sourceRoot":"../../../../../src"}